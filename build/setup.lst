ARM GAS  /tmp/ccPoKGdA.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"setup.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.UART_Control_Init,"ax",%progbits
  16              		.align	1
  17              		.global	UART_Control_Init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	UART_Control_Init:
  24              	.LFB66:
  25              		.file 1 "Src/setup.c"
   1:Src/setup.c   **** /*
   2:Src/setup.c   **** * This file is part of the hoverboard-firmware-hack project.
   3:Src/setup.c   **** *
   4:Src/setup.c   **** * Copyright (C) 2017-2018 Rene Hopf <renehopf@mac.com>
   5:Src/setup.c   **** * Copyright (C) 2017-2018 Nico Stute <crinq@crinq.de>
   6:Src/setup.c   **** * Copyright (C) 2017-2018 Niklas Fauth <niklas.fauth@kit.fail>
   7:Src/setup.c   **** *
   8:Src/setup.c   **** * This program is free software: you can redistribute it and/or modify
   9:Src/setup.c   **** * it under the terms of the GNU General Public License as published by
  10:Src/setup.c   **** * the Free Software Foundation, either version 3 of the License, or
  11:Src/setup.c   **** * (at your option) any later version.
  12:Src/setup.c   **** *
  13:Src/setup.c   **** * This program is distributed in the hope that it will be useful,
  14:Src/setup.c   **** * but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:Src/setup.c   **** * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:Src/setup.c   **** * GNU General Public License for more details.
  17:Src/setup.c   **** *
  18:Src/setup.c   **** * You should have received a copy of the GNU General Public License
  19:Src/setup.c   **** * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  20:Src/setup.c   **** */
  21:Src/setup.c   **** 
  22:Src/setup.c   **** /*
  23:Src/setup.c   **** tim1 master, enable -> trgo
  24:Src/setup.c   **** tim8, gated slave mode, trgo by tim1 trgo. overflow -> trgo
  25:Src/setup.c   **** adc1,adc2 triggered by tim8 trgo
  26:Src/setup.c   **** adc 1,2 dual mode
  27:Src/setup.c   **** 
  28:Src/setup.c   **** ADC1             ADC2
  29:Src/setup.c   **** R_Blau PC4 CH14  R_Gelb PC5 CH15
  30:Src/setup.c   **** L_Gr√ºn PA0 CH01  L_Blau PC3 CH13
  31:Src/setup.c   **** R_DC PC1 CH11    L_DC PC0 CH10
  32:Src/setup.c   **** BAT   PC2 CH12   L_TX PA2 CH02
  33:Src/setup.c   **** BAT   PC2 CH12   L_RX PA3 CH03
ARM GAS  /tmp/ccPoKGdA.s 			page 2


  34:Src/setup.c   **** 
  35:Src/setup.c   **** pb10 usart3 dma1 channel2/3
  36:Src/setup.c   **** */
  37:Src/setup.c   **** 
  38:Src/setup.c   **** #include "defines.h"
  39:Src/setup.c   **** #include "config.h"
  40:Src/setup.c   **** 
  41:Src/setup.c   **** TIM_HandleTypeDef htim_right;
  42:Src/setup.c   **** TIM_HandleTypeDef htim_left;
  43:Src/setup.c   **** ADC_HandleTypeDef hadc1;
  44:Src/setup.c   **** ADC_HandleTypeDef hadc2;
  45:Src/setup.c   **** I2C_HandleTypeDef hi2c2;
  46:Src/setup.c   **** UART_HandleTypeDef huart2;
  47:Src/setup.c   **** 
  48:Src/setup.c   **** DMA_HandleTypeDef hdma_usart2_rx;
  49:Src/setup.c   **** DMA_HandleTypeDef hdma_usart2_tx;
  50:Src/setup.c   **** volatile adc_buf_t adc_buffer;
  51:Src/setup.c   **** 
  52:Src/setup.c   **** 
  53:Src/setup.c   **** #ifdef CONTROL_SERIAL_USART2
  54:Src/setup.c   **** 
  55:Src/setup.c   **** 
  56:Src/setup.c   **** void UART_Control_Init() {
  26              		.loc 1 56 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 20
  33              		.cfi_offset 4, -20
  34              		.cfi_offset 5, -16
  35              		.cfi_offset 6, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
  41              	.LBB2:
  57:Src/setup.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
  58:Src/setup.c   ****   __HAL_RCC_USART2_CLK_ENABLE();
  42              		.loc 1 58 0
  43 0004 3E4E     		ldr	r6, .L3
  44 0006 F369     		ldr	r3, [r6, #28]
  45 0008 43F40033 		orr	r3, r3, #131072
  46 000c F361     		str	r3, [r6, #28]
  47 000e F369     		ldr	r3, [r6, #28]
  48 0010 03F40033 		and	r3, r3, #131072
  49 0014 0093     		str	r3, [sp]
  50 0016 009B     		ldr	r3, [sp]
  51              	.LBE2:
  59:Src/setup.c   ****   /* DMA1_Channel6_IRQn interrupt configuration */
  60:Src/setup.c   ****   //HAL_NVIC_SetPriority(DMA1_Channel6_IRQn, 5, 6);
  61:Src/setup.c   ****   //HAL_NVIC_EnableIRQ(DMA1_Channel6_IRQn);
  62:Src/setup.c   ****   HAL_NVIC_SetPriority(DMA1_Channel6_IRQn, 5, 6);
  52              		.loc 1 62 0
  53 0018 0622     		movs	r2, #6
ARM GAS  /tmp/ccPoKGdA.s 			page 3


  54 001a 0521     		movs	r1, #5
  55 001c 1020     		movs	r0, #16
  56 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
  57              	.LVL0:
  63:Src/setup.c   ****   HAL_NVIC_EnableIRQ(DMA1_Channel6_IRQn);
  58              		.loc 1 63 0
  59 0022 1020     		movs	r0, #16
  60 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  61              	.LVL1:
  64:Src/setup.c   ****   /* DMA1_Channel7_IRQn interrupt configuration */
  65:Src/setup.c   ****   HAL_NVIC_SetPriority(DMA1_Channel7_IRQn, 5, 7);
  62              		.loc 1 65 0
  63 0028 0722     		movs	r2, #7
  64 002a 0521     		movs	r1, #5
  65 002c 1120     		movs	r0, #17
  66 002e FFF7FEFF 		bl	HAL_NVIC_SetPriority
  67              	.LVL2:
  66:Src/setup.c   ****   HAL_NVIC_EnableIRQ(DMA1_Channel7_IRQn);
  68              		.loc 1 66 0
  69 0032 1120     		movs	r0, #17
  70 0034 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  71              	.LVL3:
  67:Src/setup.c   **** 
  68:Src/setup.c   ****   huart2.Instance = USART2;
  72              		.loc 1 68 0
  73 0038 324D     		ldr	r5, .L3+4
  74 003a 334B     		ldr	r3, .L3+8
  75 003c 2B60     		str	r3, [r5]
  69:Src/setup.c   ****   huart2.Init.BaudRate = CONTROL_BAUD;
  76              		.loc 1 69 0
  77 003e 4FF4E133 		mov	r3, #115200
  78 0042 6B60     		str	r3, [r5, #4]
  70:Src/setup.c   ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
  79              		.loc 1 70 0
  80 0044 0024     		movs	r4, #0
  81 0046 AC60     		str	r4, [r5, #8]
  71:Src/setup.c   ****   huart2.Init.StopBits = UART_STOPBITS_1;
  82              		.loc 1 71 0
  83 0048 EC60     		str	r4, [r5, #12]
  72:Src/setup.c   ****   huart2.Init.Parity = UART_PARITY_NONE;
  84              		.loc 1 72 0
  85 004a 2C61     		str	r4, [r5, #16]
  73:Src/setup.c   ****   huart2.Init.Mode = UART_MODE_TX_RX;
  86              		.loc 1 73 0
  87 004c 0C23     		movs	r3, #12
  88 004e 6B61     		str	r3, [r5, #20]
  74:Src/setup.c   ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  89              		.loc 1 74 0
  90 0050 AC61     		str	r4, [r5, #24]
  75:Src/setup.c   ****  // huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  76:Src/setup.c   ****   HAL_UART_Init(&huart2);
  91              		.loc 1 76 0
  92 0052 2846     		mov	r0, r5
  93 0054 FFF7FEFF 		bl	HAL_UART_Init
  94              	.LVL4:
  95              	.LBB3:
  77:Src/setup.c   **** 
ARM GAS  /tmp/ccPoKGdA.s 			page 4


  78:Src/setup.c   **** 
  79:Src/setup.c   ****   __HAL_RCC_DMA1_CLK_ENABLE();
  96              		.loc 1 79 0
  97 0058 7369     		ldr	r3, [r6, #20]
  98 005a 43F00103 		orr	r3, r3, #1
  99 005e 7361     		str	r3, [r6, #20]
 100 0060 7369     		ldr	r3, [r6, #20]
 101 0062 03F00103 		and	r3, r3, #1
 102 0066 0193     		str	r3, [sp, #4]
 103 0068 019B     		ldr	r3, [sp, #4]
 104              	.LBE3:
 105              	.LBB4:
  80:Src/setup.c   ****   /* USER CODE BEGIN USART2_MspInit 0 */
  81:Src/setup.c   ****    __HAL_RCC_GPIOA_CLK_ENABLE();
 106              		.loc 1 81 0
 107 006a B369     		ldr	r3, [r6, #24]
 108 006c 43F00403 		orr	r3, r3, #4
 109 0070 B361     		str	r3, [r6, #24]
 110 0072 B369     		ldr	r3, [r6, #24]
 111 0074 03F00403 		and	r3, r3, #4
 112 0078 0293     		str	r3, [sp, #8]
 113 007a 029B     		ldr	r3, [sp, #8]
 114              	.LBE4:
 115              	.LBB5:
  82:Src/setup.c   ****   /* USER CODE END USART2_MspInit 0 */
  83:Src/setup.c   ****    /* Peripheral clock enable */
  84:Src/setup.c   ****    __HAL_RCC_USART2_CLK_ENABLE();
 116              		.loc 1 84 0
 117 007c F369     		ldr	r3, [r6, #28]
 118 007e 43F40033 		orr	r3, r3, #131072
 119 0082 F361     		str	r3, [r6, #28]
 120 0084 F369     		ldr	r3, [r6, #28]
 121 0086 03F40033 		and	r3, r3, #131072
 122 008a 0393     		str	r3, [sp, #12]
 123 008c 039B     		ldr	r3, [sp, #12]
 124              	.LBE5:
  85:Src/setup.c   **** 
  86:Src/setup.c   ****  GPIO_InitStruct.Pull = GPIO_PULLUP; //GPIO_NOPULL;
 125              		.loc 1 86 0
 126 008e 0123     		movs	r3, #1
 127 0090 0693     		str	r3, [sp, #24]
  87:Src/setup.c   ****  GPIO_InitStruct.Pin = GPIO_PIN_2;
 128              		.loc 1 87 0
 129 0092 0423     		movs	r3, #4
 130 0094 0493     		str	r3, [sp, #16]
  88:Src/setup.c   ****  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 131              		.loc 1 88 0
 132 0096 0223     		movs	r3, #2
 133 0098 0593     		str	r3, [sp, #20]
  89:Src/setup.c   ****  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 134              		.loc 1 89 0
 135 009a 0323     		movs	r3, #3
 136 009c 0793     		str	r3, [sp, #28]
  90:Src/setup.c   ****  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 137              		.loc 1 90 0
 138 009e A6F58436 		sub	r6, r6, #67584
 139 00a2 04A9     		add	r1, sp, #16
ARM GAS  /tmp/ccPoKGdA.s 			page 5


 140 00a4 3046     		mov	r0, r6
 141 00a6 FFF7FEFF 		bl	HAL_GPIO_Init
 142              	.LVL5:
  91:Src/setup.c   **** 
  92:Src/setup.c   ****  GPIO_InitStruct.Pin = GPIO_PIN_3;
 143              		.loc 1 92 0
 144 00aa 0823     		movs	r3, #8
 145 00ac 0493     		str	r3, [sp, #16]
  93:Src/setup.c   ****  GPIO_InitStruct.Mode = GPIO_MODE_INPUT; //GPIO_MODE_AF_PP;
 146              		.loc 1 93 0
 147 00ae 0594     		str	r4, [sp, #20]
  94:Src/setup.c   **** // GPIO_InitStruct.Pull = GPIO_NOPULL;
  95:Src/setup.c   ****  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 148              		.loc 1 95 0
 149 00b0 04A9     		add	r1, sp, #16
 150 00b2 3046     		mov	r0, r6
 151 00b4 FFF7FEFF 		bl	HAL_GPIO_Init
 152              	.LVL6:
  96:Src/setup.c   **** 
  97:Src/setup.c   ****  /* Peripheral DMA init*/
  98:Src/setup.c   **** 
  99:Src/setup.c   ****  hdma_usart2_rx.Instance = DMA1_Channel6;
 153              		.loc 1 99 0
 154 00b8 144E     		ldr	r6, .L3+12
 155 00ba 154B     		ldr	r3, .L3+16
 156 00bc 3360     		str	r3, [r6]
 100:Src/setup.c   ****  hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 157              		.loc 1 100 0
 158 00be 7460     		str	r4, [r6, #4]
 101:Src/setup.c   ****  hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 159              		.loc 1 101 0
 160 00c0 B460     		str	r4, [r6, #8]
 102:Src/setup.c   ****  hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 161              		.loc 1 102 0
 162 00c2 8027     		movs	r7, #128
 163 00c4 F760     		str	r7, [r6, #12]
 103:Src/setup.c   ****  hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 164              		.loc 1 103 0
 165 00c6 3461     		str	r4, [r6, #16]
 104:Src/setup.c   ****  hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 166              		.loc 1 104 0
 167 00c8 7461     		str	r4, [r6, #20]
 105:Src/setup.c   ****  hdma_usart2_rx.Init.Mode = DMA_CIRCULAR; //DMA_NORMAL;
 168              		.loc 1 105 0
 169 00ca 2023     		movs	r3, #32
 170 00cc B361     		str	r3, [r6, #24]
 106:Src/setup.c   ****  hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 171              		.loc 1 106 0
 172 00ce F461     		str	r4, [r6, #28]
 107:Src/setup.c   ****  HAL_DMA_Init(&hdma_usart2_rx);
 173              		.loc 1 107 0
 174 00d0 3046     		mov	r0, r6
 175 00d2 FFF7FEFF 		bl	HAL_DMA_Init
 176              	.LVL7:
 108:Src/setup.c   **** 
 109:Src/setup.c   ****  __HAL_LINKDMA(&huart2,hdmarx,hdma_usart2_rx);
 177              		.loc 1 109 0
ARM GAS  /tmp/ccPoKGdA.s 			page 6


 178 00d6 6E63     		str	r6, [r5, #52]
 179 00d8 7562     		str	r5, [r6, #36]
 110:Src/setup.c   **** 
 111:Src/setup.c   ****  hdma_usart2_tx.Instance = DMA1_Channel7;
 180              		.loc 1 111 0
 181 00da 0E4E     		ldr	r6, .L3+20
 182 00dc 0E4B     		ldr	r3, .L3+24
 183 00de 3360     		str	r3, [r6]
 112:Src/setup.c   ****  hdma_usart2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 184              		.loc 1 112 0
 185 00e0 1023     		movs	r3, #16
 186 00e2 7360     		str	r3, [r6, #4]
 113:Src/setup.c   ****  hdma_usart2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 187              		.loc 1 113 0
 188 00e4 B460     		str	r4, [r6, #8]
 114:Src/setup.c   ****  hdma_usart2_tx.Init.MemInc = DMA_MINC_ENABLE;
 189              		.loc 1 114 0
 190 00e6 F760     		str	r7, [r6, #12]
 115:Src/setup.c   ****  hdma_usart2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 191              		.loc 1 115 0
 192 00e8 3461     		str	r4, [r6, #16]
 116:Src/setup.c   ****  hdma_usart2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 193              		.loc 1 116 0
 194 00ea 7461     		str	r4, [r6, #20]
 117:Src/setup.c   ****  hdma_usart2_tx.Init.Mode = DMA_NORMAL;
 195              		.loc 1 117 0
 196 00ec B461     		str	r4, [r6, #24]
 118:Src/setup.c   ****  hdma_usart2_tx.Init.Priority = DMA_PRIORITY_LOW;
 197              		.loc 1 118 0
 198 00ee F461     		str	r4, [r6, #28]
 119:Src/setup.c   **** HAL_DMA_Init(&hdma_usart2_tx);
 199              		.loc 1 119 0
 200 00f0 3046     		mov	r0, r6
 201 00f2 FFF7FEFF 		bl	HAL_DMA_Init
 202              	.LVL8:
 120:Src/setup.c   ****  __HAL_LINKDMA(&huart2,hdmatx,hdma_usart2_tx);
 203              		.loc 1 120 0
 204 00f6 2E63     		str	r6, [r5, #48]
 205 00f8 7562     		str	r5, [r6, #36]
 121:Src/setup.c   **** }
 206              		.loc 1 121 0
 207 00fa 09B0     		add	sp, sp, #36
 208              	.LCFI2:
 209              		.cfi_def_cfa_offset 20
 210              		@ sp needed
 211 00fc F0BD     		pop	{r4, r5, r6, r7, pc}
 212              	.L4:
 213 00fe 00BF     		.align	2
 214              	.L3:
 215 0100 00100240 		.word	1073876992
 216 0104 00000000 		.word	huart2
 217 0108 00440040 		.word	1073759232
 218 010c 00000000 		.word	hdma_usart2_rx
 219 0110 6C000240 		.word	1073873004
 220 0114 00000000 		.word	hdma_usart2_tx
 221 0118 80000240 		.word	1073873024
 222              		.cfi_endproc
ARM GAS  /tmp/ccPoKGdA.s 			page 7


 223              	.LFE66:
 225              		.section	.text.UART_Init,"ax",%progbits
 226              		.align	1
 227              		.global	UART_Init
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 231              		.fpu softvfp
 233              	UART_Init:
 234              	.LFB67:
 122:Src/setup.c   **** 
 123:Src/setup.c   **** #endif
 124:Src/setup.c   **** 
 125:Src/setup.c   **** #ifdef DEBUG_SERIAL_USART3
 126:Src/setup.c   **** void UART_Init() {
 235              		.loc 1 126 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 88
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239 0000 30B5     		push	{r4, r5, lr}
 240              	.LCFI3:
 241              		.cfi_def_cfa_offset 12
 242              		.cfi_offset 4, -12
 243              		.cfi_offset 5, -8
 244              		.cfi_offset 14, -4
 245 0002 97B0     		sub	sp, sp, #92
 246              	.LCFI4:
 247              		.cfi_def_cfa_offset 104
 248              	.LBB6:
 127:Src/setup.c   ****   __HAL_RCC_USART3_CLK_ENABLE();
 249              		.loc 1 127 0
 250 0004 1F4B     		ldr	r3, .L7
 251 0006 DA69     		ldr	r2, [r3, #28]
 252 0008 42F48022 		orr	r2, r2, #262144
 253 000c DA61     		str	r2, [r3, #28]
 254 000e DA69     		ldr	r2, [r3, #28]
 255 0010 02F48022 		and	r2, r2, #262144
 256 0014 0092     		str	r2, [sp]
 257 0016 009A     		ldr	r2, [sp]
 258              	.LBE6:
 259              	.LBB7:
 128:Src/setup.c   ****   __HAL_RCC_DMA1_CLK_ENABLE();
 260              		.loc 1 128 0
 261 0018 5A69     		ldr	r2, [r3, #20]
 262 001a 42F00102 		orr	r2, r2, #1
 263 001e 5A61     		str	r2, [r3, #20]
 264 0020 5B69     		ldr	r3, [r3, #20]
 265 0022 03F00103 		and	r3, r3, #1
 266 0026 0193     		str	r3, [sp, #4]
 267 0028 019B     		ldr	r3, [sp, #4]
 268              	.LBE7:
 129:Src/setup.c   **** 
 130:Src/setup.c   ****   UART_HandleTypeDef huart3;
 131:Src/setup.c   ****   huart3.Instance          = USART3;
 269              		.loc 1 131 0
 270 002a 174D     		ldr	r5, .L7+4
 271 002c 0695     		str	r5, [sp, #24]
ARM GAS  /tmp/ccPoKGdA.s 			page 8


 132:Src/setup.c   ****   huart3.Init.BaudRate     = DEBUG_BAUD;
 272              		.loc 1 132 0
 273 002e 4FF4E133 		mov	r3, #115200
 274 0032 0793     		str	r3, [sp, #28]
 133:Src/setup.c   ****   huart3.Init.WordLength   = UART_WORDLENGTH_8B;
 275              		.loc 1 133 0
 276 0034 0024     		movs	r4, #0
 277 0036 0894     		str	r4, [sp, #32]
 134:Src/setup.c   ****   huart3.Init.StopBits     = UART_STOPBITS_1;
 278              		.loc 1 134 0
 279 0038 0994     		str	r4, [sp, #36]
 135:Src/setup.c   ****   huart3.Init.Parity       = UART_PARITY_NONE;
 280              		.loc 1 135 0
 281 003a 0A94     		str	r4, [sp, #40]
 136:Src/setup.c   ****   huart3.Init.Mode         = UART_MODE_TX;
 282              		.loc 1 136 0
 283 003c 0823     		movs	r3, #8
 284 003e 0B93     		str	r3, [sp, #44]
 137:Src/setup.c   ****   huart3.Init.HwFlowCtl    = UART_HWCONTROL_NONE;
 285              		.loc 1 137 0
 286 0040 0C94     		str	r4, [sp, #48]
 138:Src/setup.c   ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 287              		.loc 1 138 0
 288 0042 0D94     		str	r4, [sp, #52]
 139:Src/setup.c   ****   HAL_UART_Init(&huart3);
 289              		.loc 1 139 0
 290 0044 06A8     		add	r0, sp, #24
 291 0046 FFF7FEFF 		bl	HAL_UART_Init
 292              	.LVL9:
 140:Src/setup.c   **** 
 141:Src/setup.c   ****   USART3->CR3 |= USART_CR3_DMAT;  // | USART_CR3_DMAR | USART_CR3_OVRDIS;
 293              		.loc 1 141 0
 294 004a 6B69     		ldr	r3, [r5, #20]
 295 004c 43F08003 		orr	r3, r3, #128
 296 0050 6B61     		str	r3, [r5, #20]
 142:Src/setup.c   **** 
 143:Src/setup.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
 144:Src/setup.c   ****   GPIO_InitStruct.Pin   = GPIO_PIN_10;
 297              		.loc 1 144 0
 298 0052 4FF48063 		mov	r3, #1024
 299 0056 0293     		str	r3, [sp, #8]
 145:Src/setup.c   ****   GPIO_InitStruct.Pull  = GPIO_PULLUP;
 300              		.loc 1 145 0
 301 0058 0123     		movs	r3, #1
 302 005a 0493     		str	r3, [sp, #16]
 146:Src/setup.c   ****   GPIO_InitStruct.Mode  = GPIO_MODE_AF_PP;
 303              		.loc 1 146 0
 304 005c 0223     		movs	r3, #2
 305 005e 0393     		str	r3, [sp, #12]
 147:Src/setup.c   ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 306              		.loc 1 147 0
 307 0060 0323     		movs	r3, #3
 308 0062 0593     		str	r3, [sp, #20]
 148:Src/setup.c   ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 309              		.loc 1 148 0
 310 0064 02A9     		add	r1, sp, #8
 311 0066 0948     		ldr	r0, .L7+8
ARM GAS  /tmp/ccPoKGdA.s 			page 9


 312 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 313              	.LVL10:
 149:Src/setup.c   **** 
 150:Src/setup.c   ****   DMA1_Channel2->CCR   = 0;
 314              		.loc 1 150 0
 315 006c 084B     		ldr	r3, .L7+12
 316 006e 1C60     		str	r4, [r3]
 151:Src/setup.c   ****   DMA1_Channel2->CPAR  = (uint32_t) & (USART3->DR);
 317              		.loc 1 151 0
 318 0070 084A     		ldr	r2, .L7+16
 319 0072 9A60     		str	r2, [r3, #8]
 152:Src/setup.c   ****   DMA1_Channel2->CNDTR = 0;
 320              		.loc 1 152 0
 321 0074 5C60     		str	r4, [r3, #4]
 153:Src/setup.c   ****   DMA1_Channel2->CCR   = DMA_CCR_MINC | DMA_CCR_DIR;
 322              		.loc 1 153 0
 323 0076 9022     		movs	r2, #144
 324 0078 1A60     		str	r2, [r3]
 154:Src/setup.c   ****   DMA1->IFCR           = DMA_IFCR_CTCIF2 | DMA_IFCR_CHTIF2 | DMA_IFCR_CGIF2;
 325              		.loc 1 154 0
 326 007a 1C3B     		subs	r3, r3, #28
 327 007c 7022     		movs	r2, #112
 328 007e 5A60     		str	r2, [r3, #4]
 155:Src/setup.c   **** }
 329              		.loc 1 155 0
 330 0080 17B0     		add	sp, sp, #92
 331              	.LCFI5:
 332              		.cfi_def_cfa_offset 12
 333              		@ sp needed
 334 0082 30BD     		pop	{r4, r5, pc}
 335              	.L8:
 336              		.align	2
 337              	.L7:
 338 0084 00100240 		.word	1073876992
 339 0088 00480040 		.word	1073760256
 340 008c 000C0140 		.word	1073810432
 341 0090 1C000240 		.word	1073872924
 342 0094 04480040 		.word	1073760260
 343              		.cfi_endproc
 344              	.LFE67:
 346              		.section	.text.I2C_Init,"ax",%progbits
 347              		.align	1
 348              		.global	I2C_Init
 349              		.syntax unified
 350              		.thumb
 351              		.thumb_func
 352              		.fpu softvfp
 354              	I2C_Init:
 355              	.LFB68:
 156:Src/setup.c   **** #endif
 157:Src/setup.c   **** 
 158:Src/setup.c   **** #ifdef DEBUG_SERIAL_USART2
 159:Src/setup.c   **** void UART_Init() {
 160:Src/setup.c   ****   __HAL_RCC_USART2_CLK_ENABLE();
 161:Src/setup.c   ****   __HAL_RCC_DMA1_CLK_ENABLE();
 162:Src/setup.c   **** 
 163:Src/setup.c   ****   UART_HandleTypeDef huart2;
ARM GAS  /tmp/ccPoKGdA.s 			page 10


 164:Src/setup.c   ****   huart2.Instance          = USART2;
 165:Src/setup.c   ****   huart2.Init.BaudRate     = DEBUG_BAUD;
 166:Src/setup.c   ****   huart2.Init.WordLength   = UART_WORDLENGTH_8B;
 167:Src/setup.c   ****   huart2.Init.StopBits     = UART_STOPBITS_1;
 168:Src/setup.c   ****   huart2.Init.Parity       = UART_PARITY_NONE;
 169:Src/setup.c   ****   huart2.Init.Mode         = UART_MODE_TX;
 170:Src/setup.c   ****   huart2.Init.HwFlowCtl    = UART_HWCONTROL_NONE;
 171:Src/setup.c   ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 172:Src/setup.c   ****   HAL_UART_Init(&huart2);
 173:Src/setup.c   **** 
 174:Src/setup.c   ****   USART2->CR3 |= USART_CR3_DMAT;  // | USART_CR3_DMAR | USART_CR3_OVRDIS;
 175:Src/setup.c   **** 
 176:Src/setup.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
 177:Src/setup.c   ****   GPIO_InitStruct.Pin   = GPIO_PIN_2;
 178:Src/setup.c   ****   GPIO_InitStruct.Pull  = GPIO_PULLUP;
 179:Src/setup.c   ****   GPIO_InitStruct.Mode  = GPIO_MODE_AF_PP;
 180:Src/setup.c   ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 181:Src/setup.c   ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 182:Src/setup.c   **** 
 183:Src/setup.c   ****   DMA1_Channel7->CCR   = 0;
 184:Src/setup.c   ****   DMA1_Channel7->CPAR  = (uint32_t) & (USART2->DR);
 185:Src/setup.c   ****   DMA1_Channel7->CNDTR = 0;
 186:Src/setup.c   ****   DMA1_Channel7->CCR   = DMA_CCR_MINC | DMA_CCR_DIR;
 187:Src/setup.c   ****   DMA1->IFCR           = DMA_IFCR_CTCIF7 | DMA_IFCR_CHTIF7 | DMA_IFCR_CGIF7;
 188:Src/setup.c   **** }
 189:Src/setup.c   **** #endif
 190:Src/setup.c   **** 
 191:Src/setup.c   **** /*
 192:Src/setup.c   **** void UART_Init() {
 193:Src/setup.c   ****   __HAL_RCC_USART2_CLK_ENABLE();
 194:Src/setup.c   ****   __HAL_RCC_DMA1_CLK_ENABLE();
 195:Src/setup.c   **** 
 196:Src/setup.c   ****   UART_HandleTypeDef huart2;
 197:Src/setup.c   ****   huart2.Instance          = USART2;
 198:Src/setup.c   ****   huart2.Init.BaudRate     = 115200;
 199:Src/setup.c   ****   huart2.Init.WordLength   = UART_WORDLENGTH_8B;
 200:Src/setup.c   ****   huart2.Init.StopBits     = UART_STOPBITS_1;
 201:Src/setup.c   ****   huart2.Init.Parity       = UART_PARITY_NONE;
 202:Src/setup.c   ****   huart2.Init.Mode         = UART_MODE_TX;
 203:Src/setup.c   ****   huart2.Init.HwFlowCtl    = UART_HWCONTROL_NONE;
 204:Src/setup.c   ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 205:Src/setup.c   ****   HAL_UART_Init(&huart2);
 206:Src/setup.c   **** 
 207:Src/setup.c   ****   USART2->CR3 |= USART_CR3_DMAT;  // | USART_CR3_DMAR | USART_CR3_OVRDIS;
 208:Src/setup.c   **** 
 209:Src/setup.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
 210:Src/setup.c   ****   GPIO_InitStruct.Pin   = GPIO_PIN_2;
 211:Src/setup.c   ****   GPIO_InitStruct.Pull  = GPIO_PULLUP;
 212:Src/setup.c   ****   GPIO_InitStruct.Mode  = GPIO_MODE_AF_PP;
 213:Src/setup.c   ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 214:Src/setup.c   ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 215:Src/setup.c   **** 
 216:Src/setup.c   ****   DMA1_Channel7->CCR   = 0;
 217:Src/setup.c   ****   DMA1_Channel7->CPAR  = (uint32_t) & (USART3->DR);
 218:Src/setup.c   ****   DMA1_Channel7->CNDTR = 0;
 219:Src/setup.c   ****   DMA1_Channel7->CCR   = DMA_CCR_MINC | DMA_CCR_DIR;
 220:Src/setup.c   ****   DMA1->IFCR           = DMA_IFCR_CTCIF7 | DMA_IFCR_CHTIF7 | DMA_IFCR_CGIF7;
ARM GAS  /tmp/ccPoKGdA.s 			page 11


 221:Src/setup.c   **** }
 222:Src/setup.c   **** */
 223:Src/setup.c   **** 
 224:Src/setup.c   **** DMA_HandleTypeDef hdma_i2c2_rx;
 225:Src/setup.c   **** DMA_HandleTypeDef hdma_i2c2_tx;
 226:Src/setup.c   **** 
 227:Src/setup.c   **** void I2C_Init()
 228:Src/setup.c   **** {
 356              		.loc 1 228 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 40
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 361              	.LCFI6:
 362              		.cfi_def_cfa_offset 24
 363              		.cfi_offset 4, -24
 364              		.cfi_offset 5, -20
 365              		.cfi_offset 6, -16
 366              		.cfi_offset 7, -12
 367              		.cfi_offset 8, -8
 368              		.cfi_offset 14, -4
 369 0004 8AB0     		sub	sp, sp, #40
 370              	.LCFI7:
 371              		.cfi_def_cfa_offset 64
 372              	.LBB8:
 229:Src/setup.c   **** 
 230:Src/setup.c   ****   __HAL_RCC_I2C2_CLK_ENABLE();
 373              		.loc 1 230 0
 374 0006 4A4D     		ldr	r5, .L11
 375 0008 EB69     		ldr	r3, [r5, #28]
 376 000a 43F48003 		orr	r3, r3, #4194304
 377 000e EB61     		str	r3, [r5, #28]
 378 0010 EB69     		ldr	r3, [r5, #28]
 379 0012 03F48003 		and	r3, r3, #4194304
 380 0016 0193     		str	r3, [sp, #4]
 381 0018 019B     		ldr	r3, [sp, #4]
 382              	.LBE8:
 383              	.LBB9:
 231:Src/setup.c   ****   __HAL_RCC_DMA1_CLK_ENABLE();
 384              		.loc 1 231 0
 385 001a 6B69     		ldr	r3, [r5, #20]
 386 001c 43F00103 		orr	r3, r3, #1
 387 0020 6B61     		str	r3, [r5, #20]
 388 0022 6B69     		ldr	r3, [r5, #20]
 389 0024 03F00103 		and	r3, r3, #1
 390 0028 0293     		str	r3, [sp, #8]
 391 002a 029B     		ldr	r3, [sp, #8]
 392              	.LBE9:
 232:Src/setup.c   **** 
 233:Src/setup.c   ****   /* DMA1_Channel4_IRQn interrupt configuration */
 234:Src/setup.c   ****   HAL_NVIC_SetPriority(DMA1_Channel4_IRQn, 1, 4);
 393              		.loc 1 234 0
 394 002c 0422     		movs	r2, #4
 395 002e 0121     		movs	r1, #1
 396 0030 0E20     		movs	r0, #14
 397 0032 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 398              	.LVL11:
ARM GAS  /tmp/ccPoKGdA.s 			page 12


 235:Src/setup.c   ****   HAL_NVIC_EnableIRQ(DMA1_Channel4_IRQn);
 399              		.loc 1 235 0
 400 0036 0E20     		movs	r0, #14
 401 0038 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 402              	.LVL12:
 236:Src/setup.c   ****   /* DMA1_Channel5_IRQn interrupt configuration */
 237:Src/setup.c   ****   HAL_NVIC_SetPriority(DMA1_Channel5_IRQn, 1, 3);
 403              		.loc 1 237 0
 404 003c 0322     		movs	r2, #3
 405 003e 0121     		movs	r1, #1
 406 0040 0F20     		movs	r0, #15
 407 0042 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 408              	.LVL13:
 238:Src/setup.c   ****   HAL_NVIC_EnableIRQ(DMA1_Channel5_IRQn);
 409              		.loc 1 238 0
 410 0046 0F20     		movs	r0, #15
 411 0048 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 412              	.LVL14:
 239:Src/setup.c   **** 
 240:Src/setup.c   ****   hi2c2.Instance = I2C2;
 413              		.loc 1 240 0
 414 004c 394E     		ldr	r6, .L11+4
 415 004e 3A4B     		ldr	r3, .L11+8
 416 0050 3360     		str	r3, [r6]
 241:Src/setup.c   ****   hi2c2.Init.ClockSpeed = 100000;
 417              		.loc 1 241 0
 418 0052 3A4B     		ldr	r3, .L11+12
 419 0054 7360     		str	r3, [r6, #4]
 242:Src/setup.c   ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 420              		.loc 1 242 0
 421 0056 0024     		movs	r4, #0
 422 0058 B460     		str	r4, [r6, #8]
 243:Src/setup.c   ****   hi2c2.Init.OwnAddress1 = 0;
 423              		.loc 1 243 0
 424 005a F460     		str	r4, [r6, #12]
 244:Src/setup.c   ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 425              		.loc 1 244 0
 426 005c 4FF48043 		mov	r3, #16384
 427 0060 3361     		str	r3, [r6, #16]
 245:Src/setup.c   ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 428              		.loc 1 245 0
 429 0062 7461     		str	r4, [r6, #20]
 246:Src/setup.c   ****   hi2c2.Init.OwnAddress2 = 0;
 430              		.loc 1 246 0
 431 0064 B461     		str	r4, [r6, #24]
 247:Src/setup.c   ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 432              		.loc 1 247 0
 433 0066 F461     		str	r4, [r6, #28]
 248:Src/setup.c   ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 434              		.loc 1 248 0
 435 0068 3462     		str	r4, [r6, #32]
 249:Src/setup.c   ****   HAL_I2C_Init(&hi2c2);
 436              		.loc 1 249 0
 437 006a 3046     		mov	r0, r6
 438 006c FFF7FEFF 		bl	HAL_I2C_Init
 439              	.LVL15:
 440              	.LBB10:
ARM GAS  /tmp/ccPoKGdA.s 			page 13


 250:Src/setup.c   **** 
 251:Src/setup.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
 252:Src/setup.c   **** 
 253:Src/setup.c   ****     __HAL_RCC_DMA1_CLK_ENABLE();
 441              		.loc 1 253 0
 442 0070 6B69     		ldr	r3, [r5, #20]
 443 0072 43F00103 		orr	r3, r3, #1
 444 0076 6B61     		str	r3, [r5, #20]
 445 0078 6B69     		ldr	r3, [r5, #20]
 446 007a 03F00103 		and	r3, r3, #1
 447 007e 0393     		str	r3, [sp, #12]
 448 0080 039B     		ldr	r3, [sp, #12]
 449              	.LBE10:
 450              	.LBB11:
 254:Src/setup.c   ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 451              		.loc 1 254 0
 452 0082 AB69     		ldr	r3, [r5, #24]
 453 0084 43F00803 		orr	r3, r3, #8
 454 0088 AB61     		str	r3, [r5, #24]
 455 008a AB69     		ldr	r3, [r5, #24]
 456 008c 03F00803 		and	r3, r3, #8
 457 0090 0493     		str	r3, [sp, #16]
 458 0092 049B     		ldr	r3, [sp, #16]
 459              	.LBE11:
 255:Src/setup.c   ****   /* USER CODE BEGIN I2C2_MspInit 0 */
 256:Src/setup.c   **** 
 257:Src/setup.c   ****   /* USER CODE END I2C2_MspInit 0 */
 258:Src/setup.c   **** 
 259:Src/setup.c   ****     /**I2C2 GPIO Configuration
 260:Src/setup.c   ****     PB10     ------> I2C2_SCL
 261:Src/setup.c   ****     PB11     ------> I2C2_SDA
 262:Src/setup.c   ****     */
 263:Src/setup.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 460              		.loc 1 263 0
 461 0094 4FF44063 		mov	r3, #3072
 462 0098 0693     		str	r3, [sp, #24]
 264:Src/setup.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 463              		.loc 1 264 0
 464 009a 1223     		movs	r3, #18
 465 009c 0793     		str	r3, [sp, #28]
 265:Src/setup.c   ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 466              		.loc 1 265 0
 467 009e 0123     		movs	r3, #1
 468 00a0 0893     		str	r3, [sp, #32]
 266:Src/setup.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 469              		.loc 1 266 0
 470 00a2 0323     		movs	r3, #3
 471 00a4 0993     		str	r3, [sp, #36]
 267:Src/setup.c   ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 472              		.loc 1 267 0
 473 00a6 06A9     		add	r1, sp, #24
 474 00a8 2548     		ldr	r0, .L11+16
 475 00aa FFF7FEFF 		bl	HAL_GPIO_Init
 476              	.LVL16:
 477              	.LBB12:
 268:Src/setup.c   **** 
 269:Src/setup.c   ****     /* Peripheral clock enable */
ARM GAS  /tmp/ccPoKGdA.s 			page 14


 270:Src/setup.c   ****     __HAL_RCC_I2C2_CLK_ENABLE();
 478              		.loc 1 270 0
 479 00ae EB69     		ldr	r3, [r5, #28]
 480 00b0 43F48003 		orr	r3, r3, #4194304
 481 00b4 EB61     		str	r3, [r5, #28]
 482 00b6 EB69     		ldr	r3, [r5, #28]
 483 00b8 03F48003 		and	r3, r3, #4194304
 484 00bc 0593     		str	r3, [sp, #20]
 485 00be 059B     		ldr	r3, [sp, #20]
 486              	.LBE12:
 271:Src/setup.c   **** 
 272:Src/setup.c   ****     /* Peripheral DMA init*/
 273:Src/setup.c   **** 
 274:Src/setup.c   ****     hdma_i2c2_rx.Instance = DMA1_Channel5;
 487              		.loc 1 274 0
 488 00c0 204D     		ldr	r5, .L11+20
 489 00c2 214B     		ldr	r3, .L11+24
 490 00c4 2B60     		str	r3, [r5]
 275:Src/setup.c   ****     hdma_i2c2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 491              		.loc 1 275 0
 492 00c6 6C60     		str	r4, [r5, #4]
 276:Src/setup.c   ****     hdma_i2c2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 493              		.loc 1 276 0
 494 00c8 AC60     		str	r4, [r5, #8]
 277:Src/setup.c   ****     hdma_i2c2_rx.Init.MemInc = DMA_MINC_ENABLE;
 495              		.loc 1 277 0
 496 00ca 4FF08008 		mov	r8, #128
 497 00ce C5F80C80 		str	r8, [r5, #12]
 278:Src/setup.c   ****     hdma_i2c2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 498              		.loc 1 278 0
 499 00d2 2C61     		str	r4, [r5, #16]
 279:Src/setup.c   ****     hdma_i2c2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 500              		.loc 1 279 0
 501 00d4 6C61     		str	r4, [r5, #20]
 280:Src/setup.c   ****     hdma_i2c2_rx.Init.Mode = DMA_NORMAL;
 502              		.loc 1 280 0
 503 00d6 AC61     		str	r4, [r5, #24]
 281:Src/setup.c   ****     hdma_i2c2_rx.Init.Priority = DMA_PRIORITY_MEDIUM;
 504              		.loc 1 281 0
 505 00d8 4FF48057 		mov	r7, #4096
 506 00dc EF61     		str	r7, [r5, #28]
 282:Src/setup.c   ****     HAL_DMA_Init(&hdma_i2c2_rx);
 507              		.loc 1 282 0
 508 00de 2846     		mov	r0, r5
 509 00e0 FFF7FEFF 		bl	HAL_DMA_Init
 510              	.LVL17:
 283:Src/setup.c   **** 
 284:Src/setup.c   ****     __HAL_LINKDMA(&hi2c2,hdmarx,hdma_i2c2_rx);
 511              		.loc 1 284 0
 512 00e4 B563     		str	r5, [r6, #56]
 513 00e6 6E62     		str	r6, [r5, #36]
 285:Src/setup.c   **** 
 286:Src/setup.c   ****     hdma_i2c2_tx.Instance = DMA1_Channel4;
 514              		.loc 1 286 0
 515 00e8 184D     		ldr	r5, .L11+28
 516 00ea 194B     		ldr	r3, .L11+32
 517 00ec 2B60     		str	r3, [r5]
ARM GAS  /tmp/ccPoKGdA.s 			page 15


 287:Src/setup.c   ****     hdma_i2c2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 518              		.loc 1 287 0
 519 00ee 1023     		movs	r3, #16
 520 00f0 6B60     		str	r3, [r5, #4]
 288:Src/setup.c   ****     hdma_i2c2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 521              		.loc 1 288 0
 522 00f2 AC60     		str	r4, [r5, #8]
 289:Src/setup.c   ****     hdma_i2c2_tx.Init.MemInc = DMA_MINC_ENABLE;
 523              		.loc 1 289 0
 524 00f4 C5F80C80 		str	r8, [r5, #12]
 290:Src/setup.c   ****     hdma_i2c2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 525              		.loc 1 290 0
 526 00f8 2C61     		str	r4, [r5, #16]
 291:Src/setup.c   ****     hdma_i2c2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 527              		.loc 1 291 0
 528 00fa 6C61     		str	r4, [r5, #20]
 292:Src/setup.c   ****     hdma_i2c2_tx.Init.Mode = DMA_NORMAL;
 529              		.loc 1 292 0
 530 00fc AC61     		str	r4, [r5, #24]
 293:Src/setup.c   ****     hdma_i2c2_tx.Init.Priority = DMA_PRIORITY_MEDIUM;
 531              		.loc 1 293 0
 532 00fe EF61     		str	r7, [r5, #28]
 294:Src/setup.c   ****     HAL_DMA_Init(&hdma_i2c2_tx);
 533              		.loc 1 294 0
 534 0100 2846     		mov	r0, r5
 535 0102 FFF7FEFF 		bl	HAL_DMA_Init
 536              	.LVL18:
 295:Src/setup.c   **** 
 296:Src/setup.c   ****     __HAL_LINKDMA(&hi2c2,hdmatx,hdma_i2c2_tx);
 537              		.loc 1 296 0
 538 0106 7563     		str	r5, [r6, #52]
 539 0108 6E62     		str	r6, [r5, #36]
 297:Src/setup.c   **** 
 298:Src/setup.c   ****     /* Peripheral interrupt init */
 299:Src/setup.c   ****     HAL_NVIC_SetPriority(I2C2_EV_IRQn, 0, 0);
 540              		.loc 1 299 0
 541 010a 2246     		mov	r2, r4
 542 010c 2146     		mov	r1, r4
 543 010e 2120     		movs	r0, #33
 544 0110 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 545              	.LVL19:
 300:Src/setup.c   ****     HAL_NVIC_EnableIRQ(I2C2_EV_IRQn);
 546              		.loc 1 300 0
 547 0114 2120     		movs	r0, #33
 548 0116 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 549              	.LVL20:
 301:Src/setup.c   ****     HAL_NVIC_SetPriority(I2C2_ER_IRQn, 0, 0);
 550              		.loc 1 301 0
 551 011a 2246     		mov	r2, r4
 552 011c 2146     		mov	r1, r4
 553 011e 2220     		movs	r0, #34
 554 0120 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 555              	.LVL21:
 302:Src/setup.c   ****     HAL_NVIC_EnableIRQ(I2C2_ER_IRQn);
 556              		.loc 1 302 0
 557 0124 2220     		movs	r0, #34
 558 0126 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
ARM GAS  /tmp/ccPoKGdA.s 			page 16


 559              	.LVL22:
 303:Src/setup.c   ****   /* USER CODE BEGIN I2C2_MspInit 1 */
 304:Src/setup.c   **** 
 305:Src/setup.c   ****   /* USER CODE END I2C2_MspInit 1 */
 306:Src/setup.c   **** 
 307:Src/setup.c   **** 
 308:Src/setup.c   **** }
 560              		.loc 1 308 0
 561 012a 0AB0     		add	sp, sp, #40
 562              	.LCFI8:
 563              		.cfi_def_cfa_offset 24
 564              		@ sp needed
 565 012c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 566              	.L12:
 567              		.align	2
 568              	.L11:
 569 0130 00100240 		.word	1073876992
 570 0134 00000000 		.word	hi2c2
 571 0138 00580040 		.word	1073764352
 572 013c A0860100 		.word	100000
 573 0140 000C0140 		.word	1073810432
 574 0144 00000000 		.word	hdma_i2c2_rx
 575 0148 58000240 		.word	1073872984
 576 014c 00000000 		.word	hdma_i2c2_tx
 577 0150 44000240 		.word	1073872964
 578              		.cfi_endproc
 579              	.LFE68:
 581              		.section	.text.MX_GPIO_Init,"ax",%progbits
 582              		.align	1
 583              		.global	MX_GPIO_Init
 584              		.syntax unified
 585              		.thumb
 586              		.thumb_func
 587              		.fpu softvfp
 589              	MX_GPIO_Init:
 590              	.LFB69:
 309:Src/setup.c   **** 
 310:Src/setup.c   **** void MX_GPIO_Init(void) {
 591              		.loc 1 310 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 32
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 596              	.LCFI9:
 597              		.cfi_def_cfa_offset 36
 598              		.cfi_offset 4, -36
 599              		.cfi_offset 5, -32
 600              		.cfi_offset 6, -28
 601              		.cfi_offset 7, -24
 602              		.cfi_offset 8, -20
 603              		.cfi_offset 9, -16
 604              		.cfi_offset 10, -12
 605              		.cfi_offset 11, -8
 606              		.cfi_offset 14, -4
 607 0004 89B0     		sub	sp, sp, #36
 608              	.LCFI10:
 609              		.cfi_def_cfa_offset 72
ARM GAS  /tmp/ccPoKGdA.s 			page 17


 610              	.LBB13:
 311:Src/setup.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
 312:Src/setup.c   **** 
 313:Src/setup.c   ****   /* GPIO Ports Clock Enable */
 314:Src/setup.c   ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 611              		.loc 1 314 0
 612 0006 7B4B     		ldr	r3, .L15
 613 0008 9A69     		ldr	r2, [r3, #24]
 614 000a 42F00402 		orr	r2, r2, #4
 615 000e 9A61     		str	r2, [r3, #24]
 616 0010 9A69     		ldr	r2, [r3, #24]
 617 0012 02F00402 		and	r2, r2, #4
 618 0016 0192     		str	r2, [sp, #4]
 619 0018 019A     		ldr	r2, [sp, #4]
 620              	.LBE13:
 621              	.LBB14:
 315:Src/setup.c   ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 622              		.loc 1 315 0
 623 001a 9A69     		ldr	r2, [r3, #24]
 624 001c 42F00802 		orr	r2, r2, #8
 625 0020 9A61     		str	r2, [r3, #24]
 626 0022 9A69     		ldr	r2, [r3, #24]
 627 0024 02F00802 		and	r2, r2, #8
 628 0028 0292     		str	r2, [sp, #8]
 629 002a 029A     		ldr	r2, [sp, #8]
 630              	.LBE14:
 631              	.LBB15:
 316:Src/setup.c   ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 632              		.loc 1 316 0
 633 002c 9A69     		ldr	r2, [r3, #24]
 634 002e 42F01002 		orr	r2, r2, #16
 635 0032 9A61     		str	r2, [r3, #24]
 636 0034 9B69     		ldr	r3, [r3, #24]
 637 0036 03F01003 		and	r3, r3, #16
 638 003a 0393     		str	r3, [sp, #12]
 639 003c 039B     		ldr	r3, [sp, #12]
 640              	.LBE15:
 317:Src/setup.c   **** 
 318:Src/setup.c   ****   GPIO_InitStruct.Mode  = GPIO_MODE_INPUT;
 641              		.loc 1 318 0
 642 003e 0023     		movs	r3, #0
 643 0040 0593     		str	r3, [sp, #20]
 319:Src/setup.c   ****   GPIO_InitStruct.Pull  = GPIO_NOPULL;
 644              		.loc 1 319 0
 645 0042 0693     		str	r3, [sp, #24]
 320:Src/setup.c   ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 646              		.loc 1 320 0
 647 0044 0227     		movs	r7, #2
 648 0046 0797     		str	r7, [sp, #28]
 321:Src/setup.c   **** 
 322:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_HALL_U_PIN;
 649              		.loc 1 322 0
 650 0048 4FF0200A 		mov	r10, #32
 651 004c 0DEB0A04 		add	r4, sp, r10
 652 0050 44F810AD 		str	r10, [r4, #-16]!
 323:Src/setup.c   ****   HAL_GPIO_Init(LEFT_HALL_U_PORT, &GPIO_InitStruct);
 653              		.loc 1 323 0
ARM GAS  /tmp/ccPoKGdA.s 			page 18


 654 0054 2146     		mov	r1, r4
 655 0056 6848     		ldr	r0, .L15+4
 656 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 657              	.LVL23:
 324:Src/setup.c   **** 
 325:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_HALL_V_PIN;
 658              		.loc 1 325 0
 659 005c 4023     		movs	r3, #64
 660 005e 0493     		str	r3, [sp, #16]
 326:Src/setup.c   ****   HAL_GPIO_Init(LEFT_HALL_V_PORT, &GPIO_InitStruct);
 661              		.loc 1 326 0
 662 0060 2146     		mov	r1, r4
 663 0062 6548     		ldr	r0, .L15+4
 664 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 665              	.LVL24:
 327:Src/setup.c   **** 
 328:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_HALL_W_PIN;
 666              		.loc 1 328 0
 667 0068 8025     		movs	r5, #128
 668 006a 0495     		str	r5, [sp, #16]
 329:Src/setup.c   ****   HAL_GPIO_Init(LEFT_HALL_W_PORT, &GPIO_InitStruct);
 669              		.loc 1 329 0
 670 006c 2146     		mov	r1, r4
 671 006e 6248     		ldr	r0, .L15+4
 672 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 673              	.LVL25:
 330:Src/setup.c   **** 
 331:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_HALL_U_PIN;
 674              		.loc 1 331 0
 675 0074 4FF48063 		mov	r3, #1024
 676 0078 0493     		str	r3, [sp, #16]
 332:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_HALL_U_PORT, &GPIO_InitStruct);
 677              		.loc 1 332 0
 678 007a 2146     		mov	r1, r4
 679 007c 5F48     		ldr	r0, .L15+8
 680 007e FFF7FEFF 		bl	HAL_GPIO_Init
 681              	.LVL26:
 333:Src/setup.c   **** 
 334:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_HALL_V_PIN;
 682              		.loc 1 334 0
 683 0082 4FF40063 		mov	r3, #2048
 684 0086 0493     		str	r3, [sp, #16]
 335:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_HALL_V_PORT, &GPIO_InitStruct);
 685              		.loc 1 335 0
 686 0088 2146     		mov	r1, r4
 687 008a 5C48     		ldr	r0, .L15+8
 688 008c FFF7FEFF 		bl	HAL_GPIO_Init
 689              	.LVL27:
 336:Src/setup.c   **** 
 337:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_HALL_W_PIN;
 690              		.loc 1 337 0
 691 0090 4FF48056 		mov	r6, #4096
 692 0094 0496     		str	r6, [sp, #16]
 338:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_HALL_W_PORT, &GPIO_InitStruct);
 693              		.loc 1 338 0
 694 0096 2146     		mov	r1, r4
 695 0098 5848     		ldr	r0, .L15+8
ARM GAS  /tmp/ccPoKGdA.s 			page 19


 696 009a FFF7FEFF 		bl	HAL_GPIO_Init
 697              	.LVL28:
 339:Src/setup.c   **** 
 340:Src/setup.c   ****   GPIO_InitStruct.Pin = CHARGER_PIN;
 698              		.loc 1 340 0
 699 009e 0496     		str	r6, [sp, #16]
 341:Src/setup.c   ****   HAL_GPIO_Init(CHARGER_PORT, &GPIO_InitStruct);
 700              		.loc 1 341 0
 701 00a0 2146     		mov	r1, r4
 702 00a2 5748     		ldr	r0, .L15+12
 703 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
 704              	.LVL29:
 342:Src/setup.c   **** 
 343:Src/setup.c   ****   GPIO_InitStruct.Pin = BUTTON_PIN;
 705              		.loc 1 343 0
 706 00a8 0497     		str	r7, [sp, #16]
 344:Src/setup.c   ****   HAL_GPIO_Init(BUTTON_PORT, &GPIO_InitStruct);
 707              		.loc 1 344 0
 708 00aa 2146     		mov	r1, r4
 709 00ac 5448     		ldr	r0, .L15+12
 710 00ae FFF7FEFF 		bl	HAL_GPIO_Init
 711              	.LVL30:
 345:Src/setup.c   **** 
 346:Src/setup.c   **** 
 347:Src/setup.c   ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 712              		.loc 1 347 0
 713 00b2 4FF00108 		mov	r8, #1
 714 00b6 CDF81480 		str	r8, [sp, #20]
 348:Src/setup.c   **** 
 349:Src/setup.c   ****   GPIO_InitStruct.Pin = LED_PIN;
 715              		.loc 1 349 0
 716 00ba 4FF00409 		mov	r9, #4
 717 00be CDF81090 		str	r9, [sp, #16]
 350:Src/setup.c   ****   HAL_GPIO_Init(LED_PORT, &GPIO_InitStruct);
 718              		.loc 1 350 0
 719 00c2 2146     		mov	r1, r4
 720 00c4 4C48     		ldr	r0, .L15+4
 721 00c6 FFF7FEFF 		bl	HAL_GPIO_Init
 722              	.LVL31:
 351:Src/setup.c   **** 
 352:Src/setup.c   ****   GPIO_InitStruct.Pin = BUZZER_PIN;
 723              		.loc 1 352 0
 724 00ca 1026     		movs	r6, #16
 725 00cc 0496     		str	r6, [sp, #16]
 353:Src/setup.c   ****   HAL_GPIO_Init(BUZZER_PORT, &GPIO_InitStruct);
 726              		.loc 1 353 0
 727 00ce 2146     		mov	r1, r4
 728 00d0 4B48     		ldr	r0, .L15+12
 729 00d2 FFF7FEFF 		bl	HAL_GPIO_Init
 730              	.LVL32:
 354:Src/setup.c   **** 
 355:Src/setup.c   ****   GPIO_InitStruct.Pin = OFF_PIN;
 731              		.loc 1 355 0
 732 00d6 CDF810A0 		str	r10, [sp, #16]
 356:Src/setup.c   ****   HAL_GPIO_Init(OFF_PORT, &GPIO_InitStruct);
 733              		.loc 1 356 0
 734 00da 2146     		mov	r1, r4
ARM GAS  /tmp/ccPoKGdA.s 			page 20


 735 00dc 4848     		ldr	r0, .L15+12
 736 00de FFF7FEFF 		bl	HAL_GPIO_Init
 737              	.LVL33:
 357:Src/setup.c   **** 
 358:Src/setup.c   **** 
 359:Src/setup.c   ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 738              		.loc 1 359 0
 739 00e2 0323     		movs	r3, #3
 740 00e4 0593     		str	r3, [sp, #20]
 360:Src/setup.c   **** 
 361:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_DC_CUR_PIN;
 741              		.loc 1 361 0
 742 00e6 CDF81080 		str	r8, [sp, #16]
 362:Src/setup.c   ****   HAL_GPIO_Init(LEFT_DC_CUR_PORT, &GPIO_InitStruct);
 743              		.loc 1 362 0
 744 00ea 2146     		mov	r1, r4
 745 00ec 4348     		ldr	r0, .L15+8
 746 00ee FFF7FEFF 		bl	HAL_GPIO_Init
 747              	.LVL34:
 363:Src/setup.c   **** 
 364:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_U_CUR_PIN;
 748              		.loc 1 364 0
 749 00f2 CDF81080 		str	r8, [sp, #16]
 365:Src/setup.c   ****   HAL_GPIO_Init(LEFT_U_CUR_PORT, &GPIO_InitStruct);
 750              		.loc 1 365 0
 751 00f6 2146     		mov	r1, r4
 752 00f8 4148     		ldr	r0, .L15+12
 753 00fa FFF7FEFF 		bl	HAL_GPIO_Init
 754              	.LVL35:
 366:Src/setup.c   **** 
 367:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_V_CUR_PIN;
 755              		.loc 1 367 0
 756 00fe 4FF0080B 		mov	fp, #8
 757 0102 CDF810B0 		str	fp, [sp, #16]
 368:Src/setup.c   ****   HAL_GPIO_Init(LEFT_V_CUR_PORT, &GPIO_InitStruct);
 758              		.loc 1 368 0
 759 0106 2146     		mov	r1, r4
 760 0108 3C48     		ldr	r0, .L15+8
 761 010a FFF7FEFF 		bl	HAL_GPIO_Init
 762              	.LVL36:
 369:Src/setup.c   **** 
 370:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_DC_CUR_PIN;
 763              		.loc 1 370 0
 764 010e 0497     		str	r7, [sp, #16]
 371:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_DC_CUR_PORT, &GPIO_InitStruct);
 765              		.loc 1 371 0
 766 0110 2146     		mov	r1, r4
 767 0112 3A48     		ldr	r0, .L15+8
 768 0114 FFF7FEFF 		bl	HAL_GPIO_Init
 769              	.LVL37:
 372:Src/setup.c   **** 
 373:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_U_CUR_PIN;
 770              		.loc 1 373 0
 771 0118 0496     		str	r6, [sp, #16]
 374:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_U_CUR_PORT, &GPIO_InitStruct);
 772              		.loc 1 374 0
 773 011a 2146     		mov	r1, r4
ARM GAS  /tmp/ccPoKGdA.s 			page 21


 774 011c 3748     		ldr	r0, .L15+8
 775 011e FFF7FEFF 		bl	HAL_GPIO_Init
 776              	.LVL38:
 375:Src/setup.c   **** 
 376:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_V_CUR_PIN;
 777              		.loc 1 376 0
 778 0122 CDF810A0 		str	r10, [sp, #16]
 377:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_V_CUR_PORT, &GPIO_InitStruct);
 779              		.loc 1 377 0
 780 0126 2146     		mov	r1, r4
 781 0128 3448     		ldr	r0, .L15+8
 782 012a FFF7FEFF 		bl	HAL_GPIO_Init
 783              	.LVL39:
 378:Src/setup.c   **** 
 379:Src/setup.c   ****   GPIO_InitStruct.Pin = DCLINK_PIN;
 784              		.loc 1 379 0
 785 012e CDF81090 		str	r9, [sp, #16]
 380:Src/setup.c   ****   HAL_GPIO_Init(DCLINK_PORT, &GPIO_InitStruct);
 786              		.loc 1 380 0
 787 0132 2146     		mov	r1, r4
 788 0134 3148     		ldr	r0, .L15+8
 789 0136 FFF7FEFF 		bl	HAL_GPIO_Init
 790              	.LVL40:
 381:Src/setup.c   **** 
 382:Src/setup.c   ****   //Analog in
 383:Src/setup.c   ****   GPIO_InitStruct.Pin = GPIO_PIN_3;
 791              		.loc 1 383 0
 792 013a CDF810B0 		str	fp, [sp, #16]
 384:Src/setup.c   ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 793              		.loc 1 384 0
 794 013e 2146     		mov	r1, r4
 795 0140 2F48     		ldr	r0, .L15+12
 796 0142 FFF7FEFF 		bl	HAL_GPIO_Init
 797              	.LVL41:
 385:Src/setup.c   ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 798              		.loc 1 385 0
 799 0146 CDF81090 		str	r9, [sp, #16]
 386:Src/setup.c   ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800              		.loc 1 386 0
 801 014a 2146     		mov	r1, r4
 802 014c 2C48     		ldr	r0, .L15+12
 803 014e FFF7FEFF 		bl	HAL_GPIO_Init
 804              	.LVL42:
 387:Src/setup.c   **** 
 388:Src/setup.c   ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 805              		.loc 1 388 0
 806 0152 0597     		str	r7, [sp, #20]
 389:Src/setup.c   **** 
 390:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_TIM_UH_PIN;
 807              		.loc 1 390 0
 808 0154 4023     		movs	r3, #64
 809 0156 0493     		str	r3, [sp, #16]
 391:Src/setup.c   ****   HAL_GPIO_Init(LEFT_TIM_UH_PORT, &GPIO_InitStruct);
 810              		.loc 1 391 0
 811 0158 2146     		mov	r1, r4
 812 015a 2848     		ldr	r0, .L15+8
 813 015c FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccPoKGdA.s 			page 22


 814              	.LVL43:
 392:Src/setup.c   **** 
 393:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_TIM_VH_PIN;
 815              		.loc 1 393 0
 816 0160 0495     		str	r5, [sp, #16]
 394:Src/setup.c   ****   HAL_GPIO_Init(LEFT_TIM_VH_PORT, &GPIO_InitStruct);
 817              		.loc 1 394 0
 818 0162 2146     		mov	r1, r4
 819 0164 2548     		ldr	r0, .L15+8
 820 0166 FFF7FEFF 		bl	HAL_GPIO_Init
 821              	.LVL44:
 395:Src/setup.c   **** 
 396:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_TIM_WH_PIN;
 822              		.loc 1 396 0
 823 016a 4FF48079 		mov	r9, #256
 824 016e CDF81090 		str	r9, [sp, #16]
 397:Src/setup.c   ****   HAL_GPIO_Init(LEFT_TIM_WH_PORT, &GPIO_InitStruct);
 825              		.loc 1 397 0
 826 0172 2146     		mov	r1, r4
 827 0174 2148     		ldr	r0, .L15+8
 828 0176 FFF7FEFF 		bl	HAL_GPIO_Init
 829              	.LVL45:
 398:Src/setup.c   **** 
 399:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_TIM_UL_PIN;
 830              		.loc 1 399 0
 831 017a 0495     		str	r5, [sp, #16]
 400:Src/setup.c   ****   HAL_GPIO_Init(LEFT_TIM_UL_PORT, &GPIO_InitStruct);
 832              		.loc 1 400 0
 833 017c 2146     		mov	r1, r4
 834 017e 2048     		ldr	r0, .L15+12
 835 0180 FFF7FEFF 		bl	HAL_GPIO_Init
 836              	.LVL46:
 401:Src/setup.c   **** 
 402:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_TIM_VL_PIN;
 837              		.loc 1 402 0
 838 0184 CDF81080 		str	r8, [sp, #16]
 403:Src/setup.c   ****   HAL_GPIO_Init(LEFT_TIM_VL_PORT, &GPIO_InitStruct);
 839              		.loc 1 403 0
 840 0188 2146     		mov	r1, r4
 841 018a 1B48     		ldr	r0, .L15+4
 842 018c FFF7FEFF 		bl	HAL_GPIO_Init
 843              	.LVL47:
 404:Src/setup.c   **** 
 405:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_TIM_WL_PIN;
 844              		.loc 1 405 0
 845 0190 0497     		str	r7, [sp, #16]
 406:Src/setup.c   ****   HAL_GPIO_Init(LEFT_TIM_WL_PORT, &GPIO_InitStruct);
 846              		.loc 1 406 0
 847 0192 2146     		mov	r1, r4
 848 0194 1848     		ldr	r0, .L15+4
 849 0196 FFF7FEFF 		bl	HAL_GPIO_Init
 850              	.LVL48:
 407:Src/setup.c   **** 
 408:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_TIM_UH_PIN;
 851              		.loc 1 408 0
 852 019a CDF81090 		str	r9, [sp, #16]
 409:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_TIM_UH_PORT, &GPIO_InitStruct);
ARM GAS  /tmp/ccPoKGdA.s 			page 23


 853              		.loc 1 409 0
 854 019e 2146     		mov	r1, r4
 855 01a0 1748     		ldr	r0, .L15+12
 856 01a2 FFF7FEFF 		bl	HAL_GPIO_Init
 857              	.LVL49:
 410:Src/setup.c   **** 
 411:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_TIM_VH_PIN;
 858              		.loc 1 411 0
 859 01a6 4FF40073 		mov	r3, #512
 860 01aa 0493     		str	r3, [sp, #16]
 412:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_TIM_VH_PORT, &GPIO_InitStruct);
 861              		.loc 1 412 0
 862 01ac 2146     		mov	r1, r4
 863 01ae 1448     		ldr	r0, .L15+12
 864 01b0 FFF7FEFF 		bl	HAL_GPIO_Init
 865              	.LVL50:
 413:Src/setup.c   **** 
 414:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_TIM_WH_PIN;
 866              		.loc 1 414 0
 867 01b4 4FF48063 		mov	r3, #1024
 868 01b8 0493     		str	r3, [sp, #16]
 415:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_TIM_WH_PORT, &GPIO_InitStruct);
 869              		.loc 1 415 0
 870 01ba 2146     		mov	r1, r4
 871 01bc 1048     		ldr	r0, .L15+12
 872 01be FFF7FEFF 		bl	HAL_GPIO_Init
 873              	.LVL51:
 416:Src/setup.c   **** 
 417:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_TIM_UL_PIN;
 874              		.loc 1 417 0
 875 01c2 4FF40053 		mov	r3, #8192
 876 01c6 0493     		str	r3, [sp, #16]
 418:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_TIM_UL_PORT, &GPIO_InitStruct);
 877              		.loc 1 418 0
 878 01c8 2146     		mov	r1, r4
 879 01ca 0B48     		ldr	r0, .L15+4
 880 01cc FFF7FEFF 		bl	HAL_GPIO_Init
 881              	.LVL52:
 419:Src/setup.c   **** 
 420:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_TIM_VL_PIN;
 882              		.loc 1 420 0
 883 01d0 4FF48043 		mov	r3, #16384
 884 01d4 0493     		str	r3, [sp, #16]
 421:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_TIM_VL_PORT, &GPIO_InitStruct);
 885              		.loc 1 421 0
 886 01d6 2146     		mov	r1, r4
 887 01d8 0748     		ldr	r0, .L15+4
 888 01da FFF7FEFF 		bl	HAL_GPIO_Init
 889              	.LVL53:
 422:Src/setup.c   **** 
 423:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_TIM_WL_PIN;
 890              		.loc 1 423 0
 891 01de 4FF40043 		mov	r3, #32768
 892 01e2 0493     		str	r3, [sp, #16]
 424:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_TIM_WL_PORT, &GPIO_InitStruct);
 893              		.loc 1 424 0
 894 01e4 2146     		mov	r1, r4
ARM GAS  /tmp/ccPoKGdA.s 			page 24


 895 01e6 0448     		ldr	r0, .L15+4
 896 01e8 FFF7FEFF 		bl	HAL_GPIO_Init
 897              	.LVL54:
 425:Src/setup.c   **** }
 898              		.loc 1 425 0
 899 01ec 09B0     		add	sp, sp, #36
 900              	.LCFI11:
 901              		.cfi_def_cfa_offset 36
 902              		@ sp needed
 903 01ee BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 904              	.L16:
 905 01f2 00BF     		.align	2
 906              	.L15:
 907 01f4 00100240 		.word	1073876992
 908 01f8 000C0140 		.word	1073810432
 909 01fc 00100140 		.word	1073811456
 910 0200 00080140 		.word	1073809408
 911              		.cfi_endproc
 912              	.LFE69:
 914              		.section	.text.MX_TIM_Init,"ax",%progbits
 915              		.align	1
 916              		.global	MX_TIM_Init
 917              		.syntax unified
 918              		.thumb
 919              		.thumb_func
 920              		.fpu softvfp
 922              	MX_TIM_Init:
 923              	.LFB70:
 426:Src/setup.c   **** 
 427:Src/setup.c   **** void MX_TIM_Init(void) {
 924              		.loc 1 427 0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 96
 927              		@ frame_needed = 0, uses_anonymous_args = 0
 928 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 929              	.LCFI12:
 930              		.cfi_def_cfa_offset 36
 931              		.cfi_offset 4, -36
 932              		.cfi_offset 5, -32
 933              		.cfi_offset 6, -28
 934              		.cfi_offset 7, -24
 935              		.cfi_offset 8, -20
 936              		.cfi_offset 9, -16
 937              		.cfi_offset 10, -12
 938              		.cfi_offset 11, -8
 939              		.cfi_offset 14, -4
 940 0004 99B0     		sub	sp, sp, #100
 941              	.LCFI13:
 942              		.cfi_def_cfa_offset 136
 943              	.LBB16:
 428:Src/setup.c   ****   __HAL_RCC_TIM1_CLK_ENABLE();
 944              		.loc 1 428 0
 945 0006 754B     		ldr	r3, .L19
 946 0008 9A69     		ldr	r2, [r3, #24]
 947 000a 42F40062 		orr	r2, r2, #2048
 948 000e 9A61     		str	r2, [r3, #24]
 949 0010 9A69     		ldr	r2, [r3, #24]
ARM GAS  /tmp/ccPoKGdA.s 			page 25


 950 0012 02F40062 		and	r2, r2, #2048
 951 0016 0192     		str	r2, [sp, #4]
 952 0018 019A     		ldr	r2, [sp, #4]
 953              	.LBE16:
 954              	.LBB17:
 429:Src/setup.c   ****   __HAL_RCC_TIM8_CLK_ENABLE();
 955              		.loc 1 429 0
 956 001a 9A69     		ldr	r2, [r3, #24]
 957 001c 42F40052 		orr	r2, r2, #8192
 958 0020 9A61     		str	r2, [r3, #24]
 959 0022 9B69     		ldr	r3, [r3, #24]
 960 0024 03F40053 		and	r3, r3, #8192
 961 0028 0293     		str	r3, [sp, #8]
 962 002a 029B     		ldr	r3, [sp, #8]
 963              	.LBE17:
 430:Src/setup.c   **** 
 431:Src/setup.c   ****   TIM_MasterConfigTypeDef sMasterConfig;
 432:Src/setup.c   ****   TIM_OC_InitTypeDef sConfigOC;
 433:Src/setup.c   ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 434:Src/setup.c   ****   TIM_SlaveConfigTypeDef sTimConfig;
 435:Src/setup.c   **** 
 436:Src/setup.c   ****   htim_right.Instance               = RIGHT_TIM;
 964              		.loc 1 436 0
 965 002c 6C4E     		ldr	r6, .L19+4
 966 002e DFF8B891 		ldr	r9, .L19+12
 967 0032 C6F80090 		str	r9, [r6]
 437:Src/setup.c   ****   htim_right.Init.Prescaler         = 0;
 968              		.loc 1 437 0
 969 0036 0024     		movs	r4, #0
 970 0038 7460     		str	r4, [r6, #4]
 438:Src/setup.c   ****   htim_right.Init.CounterMode       = TIM_COUNTERMODE_CENTERALIGNED1;
 971              		.loc 1 438 0
 972 003a 4FF02008 		mov	r8, #32
 973 003e C6F80880 		str	r8, [r6, #8]
 439:Src/setup.c   ****   htim_right.Init.Period            = 64000000 / 2 / PWM_FREQ;
 974              		.loc 1 439 0
 975 0042 4FF4FA6B 		mov	fp, #2000
 976 0046 C6F80CB0 		str	fp, [r6, #12]
 440:Src/setup.c   ****   htim_right.Init.ClockDivision     = TIM_CLOCKDIVISION_DIV1;
 977              		.loc 1 440 0
 978 004a 3461     		str	r4, [r6, #16]
 441:Src/setup.c   ****   htim_right.Init.RepetitionCounter = 0;
 979              		.loc 1 441 0
 980 004c 7461     		str	r4, [r6, #20]
 442:Src/setup.c   ****   htim_right.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 981              		.loc 1 442 0
 982 004e B461     		str	r4, [r6, #24]
 443:Src/setup.c   ****   HAL_TIM_PWM_Init(&htim_right);
 983              		.loc 1 443 0
 984 0050 3046     		mov	r0, r6
 985 0052 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 986              	.LVL55:
 444:Src/setup.c   **** 
 445:Src/setup.c   ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_ENABLE;
 987              		.loc 1 445 0
 988 0056 1023     		movs	r3, #16
 989 0058 1693     		str	r3, [sp, #88]
ARM GAS  /tmp/ccPoKGdA.s 			page 26


 446:Src/setup.c   ****   sMasterConfig.MasterSlaveMode     = TIM_MASTERSLAVEMODE_DISABLE;
 990              		.loc 1 446 0
 991 005a 1794     		str	r4, [sp, #92]
 447:Src/setup.c   ****   HAL_TIMEx_MasterConfigSynchronization(&htim_right, &sMasterConfig);
 992              		.loc 1 447 0
 993 005c 16A9     		add	r1, sp, #88
 994 005e 3046     		mov	r0, r6
 995 0060 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 996              	.LVL56:
 448:Src/setup.c   **** 
 449:Src/setup.c   ****   sConfigOC.OCMode       = TIM_OCMODE_PWM1;
 997              		.loc 1 449 0
 998 0064 6023     		movs	r3, #96
 999 0066 0F93     		str	r3, [sp, #60]
 450:Src/setup.c   ****   sConfigOC.Pulse        = 0;
 1000              		.loc 1 450 0
 1001 0068 1094     		str	r4, [sp, #64]
 451:Src/setup.c   ****   sConfigOC.OCPolarity   = TIM_OCPOLARITY_HIGH;
 1002              		.loc 1 451 0
 1003 006a 1194     		str	r4, [sp, #68]
 452:Src/setup.c   ****   sConfigOC.OCNPolarity  = TIM_OCNPOLARITY_LOW;
 1004              		.loc 1 452 0
 1005 006c 0827     		movs	r7, #8
 1006 006e 1297     		str	r7, [sp, #72]
 453:Src/setup.c   ****   sConfigOC.OCFastMode   = TIM_OCFAST_DISABLE;
 1007              		.loc 1 453 0
 1008 0070 1394     		str	r4, [sp, #76]
 454:Src/setup.c   ****   sConfigOC.OCIdleState  = TIM_OCIDLESTATE_RESET;
 1009              		.loc 1 454 0
 1010 0072 1494     		str	r4, [sp, #80]
 455:Src/setup.c   ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_SET;
 1011              		.loc 1 455 0
 1012 0074 4FF40073 		mov	r3, #512
 1013 0078 1593     		str	r3, [sp, #84]
 456:Src/setup.c   ****   HAL_TIM_PWM_ConfigChannel(&htim_right, &sConfigOC, TIM_CHANNEL_1);
 1014              		.loc 1 456 0
 1015 007a 2246     		mov	r2, r4
 1016 007c 0FA9     		add	r1, sp, #60
 1017 007e 3046     		mov	r0, r6
 1018 0080 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1019              	.LVL57:
 457:Src/setup.c   ****   HAL_TIM_PWM_ConfigChannel(&htim_right, &sConfigOC, TIM_CHANNEL_2);
 1020              		.loc 1 457 0
 1021 0084 0422     		movs	r2, #4
 1022 0086 0FA9     		add	r1, sp, #60
 1023 0088 3046     		mov	r0, r6
 1024 008a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1025              	.LVL58:
 458:Src/setup.c   ****   HAL_TIM_PWM_ConfigChannel(&htim_right, &sConfigOC, TIM_CHANNEL_3);
 1026              		.loc 1 458 0
 1027 008e 3A46     		mov	r2, r7
 1028 0090 0FA9     		add	r1, sp, #60
 1029 0092 3046     		mov	r0, r6
 1030 0094 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1031              	.LVL59:
 459:Src/setup.c   **** 
 460:Src/setup.c   ****   sBreakDeadTimeConfig.OffStateRunMode  = TIM_OSSR_ENABLE;
ARM GAS  /tmp/ccPoKGdA.s 			page 27


 1032              		.loc 1 460 0
 1033 0098 4FF40063 		mov	r3, #2048
 1034 009c 0893     		str	r3, [sp, #32]
 461:Src/setup.c   ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 1035              		.loc 1 461 0
 1036 009e 4FF48063 		mov	r3, #1024
 1037 00a2 0993     		str	r3, [sp, #36]
 462:Src/setup.c   ****   sBreakDeadTimeConfig.LockLevel        = TIM_LOCKLEVEL_OFF;
 1038              		.loc 1 462 0
 1039 00a4 0A94     		str	r4, [sp, #40]
 463:Src/setup.c   ****   sBreakDeadTimeConfig.DeadTime         = DEAD_TIME;
 1040              		.loc 1 463 0
 1041 00a6 CDF82C80 		str	r8, [sp, #44]
 464:Src/setup.c   ****   sBreakDeadTimeConfig.BreakState       = TIM_BREAK_DISABLE;
 1042              		.loc 1 464 0
 1043 00aa 0C94     		str	r4, [sp, #48]
 465:Src/setup.c   ****   sBreakDeadTimeConfig.BreakPolarity    = TIM_BREAKPOLARITY_LOW;
 1044              		.loc 1 465 0
 1045 00ac 0D94     		str	r4, [sp, #52]
 466:Src/setup.c   ****   sBreakDeadTimeConfig.AutomaticOutput  = TIM_AUTOMATICOUTPUT_DISABLE;
 1046              		.loc 1 466 0
 1047 00ae 0E94     		str	r4, [sp, #56]
 467:Src/setup.c   ****   HAL_TIMEx_ConfigBreakDeadTime(&htim_right, &sBreakDeadTimeConfig);
 1048              		.loc 1 467 0
 1049 00b0 0DEB0801 		add	r1, sp, r8
 1050 00b4 3046     		mov	r0, r6
 1051 00b6 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1052              	.LVL60:
 468:Src/setup.c   **** 
 469:Src/setup.c   ****   htim_left.Instance               = LEFT_TIM;
 1053              		.loc 1 469 0
 1054 00ba 4A4D     		ldr	r5, .L19+8
 1055 00bc DFF82CA1 		ldr	r10, .L19+16
 1056 00c0 C5F800A0 		str	r10, [r5]
 470:Src/setup.c   ****   htim_left.Init.Prescaler         = 0;
 1057              		.loc 1 470 0
 1058 00c4 6C60     		str	r4, [r5, #4]
 471:Src/setup.c   ****   htim_left.Init.CounterMode       = TIM_COUNTERMODE_CENTERALIGNED1;
 1059              		.loc 1 471 0
 1060 00c6 C5F80880 		str	r8, [r5, #8]
 472:Src/setup.c   ****   htim_left.Init.Period            = 64000000 / 2 / PWM_FREQ;
 1061              		.loc 1 472 0
 1062 00ca C5F80CB0 		str	fp, [r5, #12]
 473:Src/setup.c   ****   htim_left.Init.ClockDivision     = TIM_CLOCKDIVISION_DIV1;
 1063              		.loc 1 473 0
 1064 00ce 2C61     		str	r4, [r5, #16]
 474:Src/setup.c   ****   htim_left.Init.RepetitionCounter = 0;
 1065              		.loc 1 474 0
 1066 00d0 6C61     		str	r4, [r5, #20]
 475:Src/setup.c   ****   htim_left.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1067              		.loc 1 475 0
 1068 00d2 AC61     		str	r4, [r5, #24]
 476:Src/setup.c   ****   HAL_TIM_PWM_Init(&htim_left);
 1069              		.loc 1 476 0
 1070 00d4 2846     		mov	r0, r5
 1071 00d6 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1072              	.LVL61:
ARM GAS  /tmp/ccPoKGdA.s 			page 28


 477:Src/setup.c   **** 
 478:Src/setup.c   ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 1073              		.loc 1 478 0
 1074 00da CDF85880 		str	r8, [sp, #88]
 479:Src/setup.c   ****   sMasterConfig.MasterSlaveMode     = TIM_MASTERSLAVEMODE_ENABLE;
 1075              		.loc 1 479 0
 1076 00de 8023     		movs	r3, #128
 1077 00e0 1793     		str	r3, [sp, #92]
 480:Src/setup.c   ****   HAL_TIMEx_MasterConfigSynchronization(&htim_left, &sMasterConfig);
 1078              		.loc 1 480 0
 1079 00e2 16A9     		add	r1, sp, #88
 1080 00e4 2846     		mov	r0, r5
 1081 00e6 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1082              	.LVL62:
 481:Src/setup.c   **** 
 482:Src/setup.c   ****   sTimConfig.InputTrigger = TIM_TS_ITR0;
 1083              		.loc 1 482 0
 1084 00ea 0494     		str	r4, [sp, #16]
 483:Src/setup.c   ****   sTimConfig.SlaveMode    = TIM_SLAVEMODE_GATED;
 1085              		.loc 1 483 0
 1086 00ec 18A9     		add	r1, sp, #96
 1087 00ee 0523     		movs	r3, #5
 1088 00f0 41F8543D 		str	r3, [r1, #-84]!
 484:Src/setup.c   ****   HAL_TIM_SlaveConfigSynchronization(&htim_left, &sTimConfig);
 1089              		.loc 1 484 0
 1090 00f4 2846     		mov	r0, r5
 1091 00f6 FFF7FEFF 		bl	HAL_TIM_SlaveConfigSynchronization
 1092              	.LVL63:
 485:Src/setup.c   **** 
 486:Src/setup.c   ****   sConfigOC.OCMode       = TIM_OCMODE_PWM1;
 1093              		.loc 1 486 0
 1094 00fa 6023     		movs	r3, #96
 1095 00fc 0F93     		str	r3, [sp, #60]
 487:Src/setup.c   ****   sConfigOC.Pulse        = 0;
 1096              		.loc 1 487 0
 1097 00fe 1094     		str	r4, [sp, #64]
 488:Src/setup.c   ****   sConfigOC.OCPolarity   = TIM_OCPOLARITY_HIGH;
 1098              		.loc 1 488 0
 1099 0100 1194     		str	r4, [sp, #68]
 489:Src/setup.c   ****   sConfigOC.OCNPolarity  = TIM_OCNPOLARITY_LOW;
 1100              		.loc 1 489 0
 1101 0102 1297     		str	r7, [sp, #72]
 490:Src/setup.c   ****   sConfigOC.OCFastMode   = TIM_OCFAST_DISABLE;
 1102              		.loc 1 490 0
 1103 0104 1394     		str	r4, [sp, #76]
 491:Src/setup.c   ****   sConfigOC.OCIdleState  = TIM_OCIDLESTATE_RESET;
 1104              		.loc 1 491 0
 1105 0106 1494     		str	r4, [sp, #80]
 492:Src/setup.c   ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_SET;
 1106              		.loc 1 492 0
 1107 0108 4FF40073 		mov	r3, #512
 1108 010c 1593     		str	r3, [sp, #84]
 493:Src/setup.c   ****   HAL_TIM_PWM_ConfigChannel(&htim_left, &sConfigOC, TIM_CHANNEL_1);
 1109              		.loc 1 493 0
 1110 010e 2246     		mov	r2, r4
 1111 0110 0FA9     		add	r1, sp, #60
 1112 0112 2846     		mov	r0, r5
ARM GAS  /tmp/ccPoKGdA.s 			page 29


 1113 0114 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1114              	.LVL64:
 494:Src/setup.c   ****   HAL_TIM_PWM_ConfigChannel(&htim_left, &sConfigOC, TIM_CHANNEL_2);
 1115              		.loc 1 494 0
 1116 0118 0422     		movs	r2, #4
 1117 011a 0FA9     		add	r1, sp, #60
 1118 011c 2846     		mov	r0, r5
 1119 011e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1120              	.LVL65:
 495:Src/setup.c   ****   HAL_TIM_PWM_ConfigChannel(&htim_left, &sConfigOC, TIM_CHANNEL_3);
 1121              		.loc 1 495 0
 1122 0122 3A46     		mov	r2, r7
 1123 0124 0FA9     		add	r1, sp, #60
 1124 0126 2846     		mov	r0, r5
 1125 0128 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1126              	.LVL66:
 496:Src/setup.c   **** 
 497:Src/setup.c   ****   sBreakDeadTimeConfig.OffStateRunMode  = TIM_OSSR_ENABLE;
 1127              		.loc 1 497 0
 1128 012c 4FF40063 		mov	r3, #2048
 1129 0130 0893     		str	r3, [sp, #32]
 498:Src/setup.c   ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 1130              		.loc 1 498 0
 1131 0132 4FF48063 		mov	r3, #1024
 1132 0136 0993     		str	r3, [sp, #36]
 499:Src/setup.c   ****   sBreakDeadTimeConfig.LockLevel        = TIM_LOCKLEVEL_OFF;
 1133              		.loc 1 499 0
 1134 0138 0A94     		str	r4, [sp, #40]
 500:Src/setup.c   ****   sBreakDeadTimeConfig.DeadTime         = DEAD_TIME;
 1135              		.loc 1 500 0
 1136 013a CDF82C80 		str	r8, [sp, #44]
 501:Src/setup.c   ****   sBreakDeadTimeConfig.BreakState       = TIM_BREAK_DISABLE;
 1137              		.loc 1 501 0
 1138 013e 0C94     		str	r4, [sp, #48]
 502:Src/setup.c   ****   sBreakDeadTimeConfig.BreakPolarity    = TIM_BREAKPOLARITY_LOW;
 1139              		.loc 1 502 0
 1140 0140 0D94     		str	r4, [sp, #52]
 503:Src/setup.c   ****   sBreakDeadTimeConfig.AutomaticOutput  = TIM_AUTOMATICOUTPUT_DISABLE;
 1141              		.loc 1 503 0
 1142 0142 0E94     		str	r4, [sp, #56]
 504:Src/setup.c   ****   HAL_TIMEx_ConfigBreakDeadTime(&htim_left, &sBreakDeadTimeConfig);
 1143              		.loc 1 504 0
 1144 0144 0DEB0801 		add	r1, sp, r8
 1145 0148 2846     		mov	r0, r5
 1146 014a FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1147              	.LVL67:
 505:Src/setup.c   **** 
 506:Src/setup.c   ****   LEFT_TIM->BDTR &= ~TIM_BDTR_MOE;
 1148              		.loc 1 506 0
 1149 014e DAF84430 		ldr	r3, [r10, #68]
 1150 0152 23F40043 		bic	r3, r3, #32768
 1151 0156 CAF84430 		str	r3, [r10, #68]
 507:Src/setup.c   ****   RIGHT_TIM->BDTR &= ~TIM_BDTR_MOE;
 1152              		.loc 1 507 0
 1153 015a D9F84430 		ldr	r3, [r9, #68]
 1154 015e 23F40043 		bic	r3, r3, #32768
 1155 0162 C9F84430 		str	r3, [r9, #68]
ARM GAS  /tmp/ccPoKGdA.s 			page 30


 508:Src/setup.c   **** 
 509:Src/setup.c   ****   HAL_TIM_PWM_Start(&htim_left, TIM_CHANNEL_1);
 1156              		.loc 1 509 0
 1157 0166 2146     		mov	r1, r4
 1158 0168 2846     		mov	r0, r5
 1159 016a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1160              	.LVL68:
 510:Src/setup.c   ****   HAL_TIM_PWM_Start(&htim_left, TIM_CHANNEL_2);
 1161              		.loc 1 510 0
 1162 016e 0421     		movs	r1, #4
 1163 0170 2846     		mov	r0, r5
 1164 0172 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1165              	.LVL69:
 511:Src/setup.c   ****   HAL_TIM_PWM_Start(&htim_left, TIM_CHANNEL_3);
 1166              		.loc 1 511 0
 1167 0176 3946     		mov	r1, r7
 1168 0178 2846     		mov	r0, r5
 1169 017a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1170              	.LVL70:
 512:Src/setup.c   ****   HAL_TIMEx_PWMN_Start(&htim_left, TIM_CHANNEL_1);
 1171              		.loc 1 512 0
 1172 017e 2146     		mov	r1, r4
 1173 0180 2846     		mov	r0, r5
 1174 0182 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 1175              	.LVL71:
 513:Src/setup.c   ****   HAL_TIMEx_PWMN_Start(&htim_left, TIM_CHANNEL_2);
 1176              		.loc 1 513 0
 1177 0186 0421     		movs	r1, #4
 1178 0188 2846     		mov	r0, r5
 1179 018a FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 1180              	.LVL72:
 514:Src/setup.c   ****   HAL_TIMEx_PWMN_Start(&htim_left, TIM_CHANNEL_3);
 1181              		.loc 1 514 0
 1182 018e 3946     		mov	r1, r7
 1183 0190 2846     		mov	r0, r5
 1184 0192 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 1185              	.LVL73:
 515:Src/setup.c   **** 
 516:Src/setup.c   ****   HAL_TIM_PWM_Start(&htim_right, TIM_CHANNEL_1);
 1186              		.loc 1 516 0
 1187 0196 2146     		mov	r1, r4
 1188 0198 3046     		mov	r0, r6
 1189 019a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1190              	.LVL74:
 517:Src/setup.c   ****   HAL_TIM_PWM_Start(&htim_right, TIM_CHANNEL_2);
 1191              		.loc 1 517 0
 1192 019e 0421     		movs	r1, #4
 1193 01a0 3046     		mov	r0, r6
 1194 01a2 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1195              	.LVL75:
 518:Src/setup.c   ****   HAL_TIM_PWM_Start(&htim_right, TIM_CHANNEL_3);
 1196              		.loc 1 518 0
 1197 01a6 3946     		mov	r1, r7
 1198 01a8 3046     		mov	r0, r6
 1199 01aa FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1200              	.LVL76:
 519:Src/setup.c   ****   HAL_TIMEx_PWMN_Start(&htim_right, TIM_CHANNEL_1);
ARM GAS  /tmp/ccPoKGdA.s 			page 31


 1201              		.loc 1 519 0
 1202 01ae 2146     		mov	r1, r4
 1203 01b0 3046     		mov	r0, r6
 1204 01b2 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 1205              	.LVL77:
 520:Src/setup.c   ****   HAL_TIMEx_PWMN_Start(&htim_right, TIM_CHANNEL_2);
 1206              		.loc 1 520 0
 1207 01b6 0421     		movs	r1, #4
 1208 01b8 3046     		mov	r0, r6
 1209 01ba FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 1210              	.LVL78:
 521:Src/setup.c   ****   HAL_TIMEx_PWMN_Start(&htim_right, TIM_CHANNEL_3);
 1211              		.loc 1 521 0
 1212 01be 3946     		mov	r1, r7
 1213 01c0 3046     		mov	r0, r6
 1214 01c2 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 1215              	.LVL79:
 522:Src/setup.c   **** 
 523:Src/setup.c   ****   htim_left.Instance->RCR = 1;
 1216              		.loc 1 523 0
 1217 01c6 2B68     		ldr	r3, [r5]
 1218 01c8 0122     		movs	r2, #1
 1219 01ca 1A63     		str	r2, [r3, #48]
 524:Src/setup.c   **** 
 525:Src/setup.c   ****   __HAL_TIM_ENABLE(&htim_right);
 1220              		.loc 1 525 0
 1221 01cc 3268     		ldr	r2, [r6]
 1222 01ce 1368     		ldr	r3, [r2]
 1223 01d0 43F00103 		orr	r3, r3, #1
 1224 01d4 1360     		str	r3, [r2]
 526:Src/setup.c   **** }
 1225              		.loc 1 526 0
 1226 01d6 19B0     		add	sp, sp, #100
 1227              	.LCFI14:
 1228              		.cfi_def_cfa_offset 36
 1229              		@ sp needed
 1230 01d8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1231              	.L20:
 1232              		.align	2
 1233              	.L19:
 1234 01dc 00100240 		.word	1073876992
 1235 01e0 00000000 		.word	htim_right
 1236 01e4 00000000 		.word	htim_left
 1237 01e8 002C0140 		.word	1073818624
 1238 01ec 00340140 		.word	1073820672
 1239              		.cfi_endproc
 1240              	.LFE70:
 1242              		.section	.text.MX_ADC1_Init,"ax",%progbits
 1243              		.align	1
 1244              		.global	MX_ADC1_Init
 1245              		.syntax unified
 1246              		.thumb
 1247              		.thumb_func
 1248              		.fpu softvfp
 1250              	MX_ADC1_Init:
 1251              	.LFB71:
 527:Src/setup.c   **** 
ARM GAS  /tmp/ccPoKGdA.s 			page 32


 528:Src/setup.c   **** void MX_ADC1_Init(void) {
 1252              		.loc 1 528 0
 1253              		.cfi_startproc
 1254              		@ args = 0, pretend = 0, frame = 24
 1255              		@ frame_needed = 0, uses_anonymous_args = 0
 1256 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1257              	.LCFI15:
 1258              		.cfi_def_cfa_offset 24
 1259              		.cfi_offset 4, -24
 1260              		.cfi_offset 5, -20
 1261              		.cfi_offset 6, -16
 1262              		.cfi_offset 7, -12
 1263              		.cfi_offset 8, -8
 1264              		.cfi_offset 14, -4
 1265 0004 86B0     		sub	sp, sp, #24
 1266              	.LCFI16:
 1267              		.cfi_def_cfa_offset 48
 1268              	.LBB18:
 529:Src/setup.c   ****   ADC_MultiModeTypeDef multimode;
 530:Src/setup.c   ****   ADC_ChannelConfTypeDef sConfig;
 531:Src/setup.c   **** 
 532:Src/setup.c   ****   __HAL_RCC_ADC1_CLK_ENABLE();
 1269              		.loc 1 532 0
 1270 0006 424E     		ldr	r6, .L23
 1271 0008 B369     		ldr	r3, [r6, #24]
 1272 000a 43F40073 		orr	r3, r3, #512
 1273 000e B361     		str	r3, [r6, #24]
 1274 0010 B369     		ldr	r3, [r6, #24]
 1275 0012 03F40073 		and	r3, r3, #512
 1276 0016 0093     		str	r3, [sp]
 1277 0018 009B     		ldr	r3, [sp]
 1278              	.LBE18:
 533:Src/setup.c   **** 
 534:Src/setup.c   ****   hadc1.Instance                   = ADC1;
 1279              		.loc 1 534 0
 1280 001a 3E4C     		ldr	r4, .L23+4
 1281 001c 3E4B     		ldr	r3, .L23+8
 1282 001e 2360     		str	r3, [r4]
 535:Src/setup.c   ****   hadc1.Init.ScanConvMode          = ADC_SCAN_ENABLE;
 1283              		.loc 1 535 0
 1284 0020 4FF48073 		mov	r3, #256
 1285 0024 A360     		str	r3, [r4, #8]
 536:Src/setup.c   ****   hadc1.Init.ContinuousConvMode    = DISABLE;
 1286              		.loc 1 536 0
 1287 0026 0025     		movs	r5, #0
 1288 0028 E560     		str	r5, [r4, #12]
 537:Src/setup.c   ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1289              		.loc 1 537 0
 1290 002a 6561     		str	r5, [r4, #20]
 538:Src/setup.c   ****   hadc1.Init.ExternalTrigConv      = ADC_EXTERNALTRIGCONV_T8_TRGO;
 1291              		.loc 1 538 0
 1292 002c 4FF44023 		mov	r3, #786432
 1293 0030 E361     		str	r3, [r4, #28]
 539:Src/setup.c   ****   hadc1.Init.DataAlign             = ADC_DATAALIGN_RIGHT;
 1294              		.loc 1 539 0
 1295 0032 6560     		str	r5, [r4, #4]
 540:Src/setup.c   ****   hadc1.Init.NbrOfConversion       = 5;
ARM GAS  /tmp/ccPoKGdA.s 			page 33


 1296              		.loc 1 540 0
 1297 0034 4FF00508 		mov	r8, #5
 1298 0038 C4F81080 		str	r8, [r4, #16]
 541:Src/setup.c   ****   HAL_ADC_Init(&hadc1);
 1299              		.loc 1 541 0
 1300 003c 2046     		mov	r0, r4
 1301 003e FFF7FEFF 		bl	HAL_ADC_Init
 1302              	.LVL80:
 542:Src/setup.c   ****   /**Enable or disable the remapping of ADC1_ETRGREG:
 543:Src/setup.c   ****     * ADC1 External Event regular conversion is connected to TIM8 TRG0
 544:Src/setup.c   ****     */
 545:Src/setup.c   ****   __HAL_AFIO_REMAP_ADC1_ETRGREG_ENABLE();
 1303              		.loc 1 545 0
 1304 0042 364A     		ldr	r2, .L23+12
 1305 0044 5368     		ldr	r3, [r2, #4]
 1306 0046 43F48023 		orr	r3, r3, #262144
 1307 004a 5360     		str	r3, [r2, #4]
 546:Src/setup.c   **** 
 547:Src/setup.c   ****   /**Configure the ADC multi-mode
 548:Src/setup.c   ****     */
 549:Src/setup.c   ****   multimode.Mode = ADC_DUALMODE_REGSIMULT;
 1308              		.loc 1 549 0
 1309 004c 06A9     		add	r1, sp, #24
 1310 004e 4FF4C023 		mov	r3, #393216
 1311 0052 41F8043D 		str	r3, [r1, #-4]!
 550:Src/setup.c   ****   HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode);
 1312              		.loc 1 550 0
 1313 0056 2046     		mov	r0, r4
 1314 0058 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 1315              	.LVL81:
 551:Src/setup.c   **** 
 552:Src/setup.c   ****   sConfig.SamplingTime = ADC_SAMPLETIME_7CYCLES_5;
 1316              		.loc 1 552 0
 1317 005c 0123     		movs	r3, #1
 1318 005e 0493     		str	r3, [sp, #16]
 553:Src/setup.c   **** 
 554:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_14;  // pc4 left b
 1319              		.loc 1 554 0
 1320 0060 0E22     		movs	r2, #14
 1321 0062 0292     		str	r2, [sp, #8]
 555:Src/setup.c   ****   sConfig.Rank    = 1;
 1322              		.loc 1 555 0
 1323 0064 0393     		str	r3, [sp, #12]
 556:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 1324              		.loc 1 556 0
 1325 0066 02A9     		add	r1, sp, #8
 1326 0068 2046     		mov	r0, r4
 1327 006a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1328              	.LVL82:
 557:Src/setup.c   **** 
 558:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_0;  // pa0 right a
 1329              		.loc 1 558 0
 1330 006e 0295     		str	r5, [sp, #8]
 559:Src/setup.c   ****   sConfig.Rank    = 2;
 1331              		.loc 1 559 0
 1332 0070 0227     		movs	r7, #2
 1333 0072 0397     		str	r7, [sp, #12]
ARM GAS  /tmp/ccPoKGdA.s 			page 34


 560:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 1334              		.loc 1 560 0
 1335 0074 02A9     		add	r1, sp, #8
 1336 0076 2046     		mov	r0, r4
 1337 0078 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1338              	.LVL83:
 561:Src/setup.c   **** 
 562:Src/setup.c   ****   sConfig.SamplingTime = ADC_SAMPLETIME_13CYCLES_5;
 1339              		.loc 1 562 0
 1340 007c 0497     		str	r7, [sp, #16]
 563:Src/setup.c   **** 
 564:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_11;  // pc1 left cur
 1341              		.loc 1 564 0
 1342 007e 0B27     		movs	r7, #11
 1343 0080 0297     		str	r7, [sp, #8]
 565:Src/setup.c   ****   sConfig.Rank    = 3;
 1344              		.loc 1 565 0
 1345 0082 0323     		movs	r3, #3
 1346 0084 0393     		str	r3, [sp, #12]
 566:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 1347              		.loc 1 566 0
 1348 0086 02A9     		add	r1, sp, #8
 1349 0088 2046     		mov	r0, r4
 1350 008a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1351              	.LVL84:
 567:Src/setup.c   **** 
 568:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_12;  // pc2 vbat
 1352              		.loc 1 568 0
 1353 008e 0C23     		movs	r3, #12
 1354 0090 0293     		str	r3, [sp, #8]
 569:Src/setup.c   ****   sConfig.Rank    = 4;
 1355              		.loc 1 569 0
 1356 0092 0423     		movs	r3, #4
 1357 0094 0393     		str	r3, [sp, #12]
 570:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 1358              		.loc 1 570 0
 1359 0096 02A9     		add	r1, sp, #8
 1360 0098 2046     		mov	r0, r4
 1361 009a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1362              	.LVL85:
 571:Src/setup.c   **** 
 572:Src/setup.c   ****   //temperature requires at least 17.1uS sampling time
 573:Src/setup.c   ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
 1363              		.loc 1 573 0
 1364 009e 0723     		movs	r3, #7
 1365 00a0 0493     		str	r3, [sp, #16]
 574:Src/setup.c   **** 
 575:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;  // internal temp
 1366              		.loc 1 575 0
 1367 00a2 1023     		movs	r3, #16
 1368 00a4 0293     		str	r3, [sp, #8]
 576:Src/setup.c   ****   sConfig.Rank    = 5;
 1369              		.loc 1 576 0
 1370 00a6 CDF80C80 		str	r8, [sp, #12]
 577:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 1371              		.loc 1 577 0
 1372 00aa 02A9     		add	r1, sp, #8
ARM GAS  /tmp/ccPoKGdA.s 			page 35


 1373 00ac 2046     		mov	r0, r4
 1374 00ae FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1375              	.LVL86:
 578:Src/setup.c   **** 
 579:Src/setup.c   ****   hadc1.Instance->CR2 |= ADC_CR2_DMA | ADC_CR2_TSVREFE;
 1376              		.loc 1 579 0
 1377 00b2 2268     		ldr	r2, [r4]
 1378 00b4 9368     		ldr	r3, [r2, #8]
 1379 00b6 43F40003 		orr	r3, r3, #8388608
 1380 00ba 43F48073 		orr	r3, r3, #256
 1381 00be 9360     		str	r3, [r2, #8]
 580:Src/setup.c   **** 
 581:Src/setup.c   ****   __HAL_ADC_ENABLE(&hadc1);
 1382              		.loc 1 581 0
 1383 00c0 9368     		ldr	r3, [r2, #8]
 1384 00c2 43F00103 		orr	r3, r3, #1
 1385 00c6 9360     		str	r3, [r2, #8]
 1386              	.LBB19:
 582:Src/setup.c   **** 
 583:Src/setup.c   ****   __HAL_RCC_DMA1_CLK_ENABLE();
 1387              		.loc 1 583 0
 1388 00c8 7369     		ldr	r3, [r6, #20]
 1389 00ca 43F00103 		orr	r3, r3, #1
 1390 00ce 7361     		str	r3, [r6, #20]
 1391 00d0 7369     		ldr	r3, [r6, #20]
 1392 00d2 03F00103 		and	r3, r3, #1
 1393 00d6 0193     		str	r3, [sp, #4]
 1394 00d8 019B     		ldr	r3, [sp, #4]
 1395              	.LBE19:
 584:Src/setup.c   **** 
 585:Src/setup.c   ****   DMA1_Channel1->CCR   = 0;
 1396              		.loc 1 585 0
 1397 00da 114B     		ldr	r3, .L23+16
 1398 00dc 1D60     		str	r5, [r3]
 586:Src/setup.c   ****   DMA1_Channel1->CNDTR = 5;
 1399              		.loc 1 586 0
 1400 00de C3F80480 		str	r8, [r3, #4]
 587:Src/setup.c   ****   DMA1_Channel1->CPAR  = (uint32_t) & (ADC1->DR);
 1401              		.loc 1 587 0
 1402 00e2 104A     		ldr	r2, .L23+20
 1403 00e4 9A60     		str	r2, [r3, #8]
 588:Src/setup.c   ****   DMA1_Channel1->CMAR  = (uint32_t)&adc_buffer;
 1404              		.loc 1 588 0
 1405 00e6 104A     		ldr	r2, .L23+24
 1406 00e8 DA60     		str	r2, [r3, #12]
 589:Src/setup.c   ****   DMA1_Channel1->CCR   = DMA_CCR_MSIZE_1 | DMA_CCR_PSIZE_1 | DMA_CCR_MINC | DMA_CCR_CIRC | DMA_CCR_
 1407              		.loc 1 589 0
 1408 00ea 40F6A222 		movw	r2, #2722
 1409 00ee 1A60     		str	r2, [r3]
 590:Src/setup.c   ****   DMA1_Channel1->CCR |= DMA_CCR_EN;
 1410              		.loc 1 590 0
 1411 00f0 1A68     		ldr	r2, [r3]
 1412 00f2 42F00102 		orr	r2, r2, #1
 1413 00f6 1A60     		str	r2, [r3]
 591:Src/setup.c   **** 
 592:Src/setup.c   ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 1414              		.loc 1 592 0
ARM GAS  /tmp/ccPoKGdA.s 			page 36


 1415 00f8 2A46     		mov	r2, r5
 1416 00fa 2946     		mov	r1, r5
 1417 00fc 3846     		mov	r0, r7
 1418 00fe FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1419              	.LVL87:
 593:Src/setup.c   ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 1420              		.loc 1 593 0
 1421 0102 3846     		mov	r0, r7
 1422 0104 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1423              	.LVL88:
 594:Src/setup.c   **** }
 1424              		.loc 1 594 0
 1425 0108 06B0     		add	sp, sp, #24
 1426              	.LCFI17:
 1427              		.cfi_def_cfa_offset 24
 1428              		@ sp needed
 1429 010a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1430              	.L24:
 1431 010e 00BF     		.align	2
 1432              	.L23:
 1433 0110 00100240 		.word	1073876992
 1434 0114 00000000 		.word	hadc1
 1435 0118 00240140 		.word	1073816576
 1436 011c 00000140 		.word	1073807360
 1437 0120 08000240 		.word	1073872904
 1438 0124 4C240140 		.word	1073816652
 1439 0128 00000000 		.word	adc_buffer
 1440              		.cfi_endproc
 1441              	.LFE71:
 1443              		.section	.text.MX_ADC2_Init,"ax",%progbits
 1444              		.align	1
 1445              		.global	MX_ADC2_Init
 1446              		.syntax unified
 1447              		.thumb
 1448              		.thumb_func
 1449              		.fpu softvfp
 1451              	MX_ADC2_Init:
 1452              	.LFB72:
 595:Src/setup.c   **** 
 596:Src/setup.c   **** /* ADC2 init function */
 597:Src/setup.c   **** void MX_ADC2_Init(void) {
 1453              		.loc 1 597 0
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 16
 1456              		@ frame_needed = 0, uses_anonymous_args = 0
 1457 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1458              	.LCFI18:
 1459              		.cfi_def_cfa_offset 20
 1460              		.cfi_offset 4, -20
 1461              		.cfi_offset 5, -16
 1462              		.cfi_offset 6, -12
 1463              		.cfi_offset 7, -8
 1464              		.cfi_offset 14, -4
 1465 0002 85B0     		sub	sp, sp, #20
 1466              	.LCFI19:
 1467              		.cfi_def_cfa_offset 40
 1468              	.LBB20:
ARM GAS  /tmp/ccPoKGdA.s 			page 37


 598:Src/setup.c   ****   ADC_ChannelConfTypeDef sConfig;
 599:Src/setup.c   **** 
 600:Src/setup.c   ****   __HAL_RCC_ADC2_CLK_ENABLE();
 1469              		.loc 1 600 0
 1470 0004 284B     		ldr	r3, .L27
 1471 0006 9A69     		ldr	r2, [r3, #24]
 1472 0008 42F48062 		orr	r2, r2, #1024
 1473 000c 9A61     		str	r2, [r3, #24]
 1474 000e 9B69     		ldr	r3, [r3, #24]
 1475 0010 03F48063 		and	r3, r3, #1024
 1476 0014 0093     		str	r3, [sp]
 1477 0016 009B     		ldr	r3, [sp]
 1478              	.LBE20:
 601:Src/setup.c   **** 
 602:Src/setup.c   ****   // HAL_ADC_DeInit(&hadc2);
 603:Src/setup.c   ****   // hadc2.Instance->CR2 = 0;
 604:Src/setup.c   ****   /**Common config
 605:Src/setup.c   ****     */
 606:Src/setup.c   ****   hadc2.Instance                   = ADC2;
 1479              		.loc 1 606 0
 1480 0018 244C     		ldr	r4, .L27+4
 1481 001a 254B     		ldr	r3, .L27+8
 1482 001c 2360     		str	r3, [r4]
 607:Src/setup.c   ****   hadc2.Init.ScanConvMode          = ADC_SCAN_ENABLE;
 1483              		.loc 1 607 0
 1484 001e 4FF48073 		mov	r3, #256
 1485 0022 A360     		str	r3, [r4, #8]
 608:Src/setup.c   ****   hadc2.Init.ContinuousConvMode    = DISABLE;
 1486              		.loc 1 608 0
 1487 0024 0023     		movs	r3, #0
 1488 0026 E360     		str	r3, [r4, #12]
 609:Src/setup.c   ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 1489              		.loc 1 609 0
 1490 0028 6361     		str	r3, [r4, #20]
 610:Src/setup.c   ****   hadc2.Init.ExternalTrigConv      = ADC_SOFTWARE_START;
 1491              		.loc 1 610 0
 1492 002a 4FF46022 		mov	r2, #917504
 1493 002e E261     		str	r2, [r4, #28]
 611:Src/setup.c   ****   hadc2.Init.DataAlign             = ADC_DATAALIGN_RIGHT;
 1494              		.loc 1 611 0
 1495 0030 6360     		str	r3, [r4, #4]
 612:Src/setup.c   ****   hadc2.Init.NbrOfConversion       = 5;
 1496              		.loc 1 612 0
 1497 0032 0526     		movs	r6, #5
 1498 0034 2661     		str	r6, [r4, #16]
 613:Src/setup.c   ****   HAL_ADC_Init(&hadc2);
 1499              		.loc 1 613 0
 1500 0036 2046     		mov	r0, r4
 1501 0038 FFF7FEFF 		bl	HAL_ADC_Init
 1502              	.LVL89:
 614:Src/setup.c   **** 
 615:Src/setup.c   ****   sConfig.SamplingTime = ADC_SAMPLETIME_7CYCLES_5;
 1503              		.loc 1 615 0
 1504 003c 0123     		movs	r3, #1
 1505 003e 0393     		str	r3, [sp, #12]
 616:Src/setup.c   **** 
 617:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_15;  // pc5 left c
ARM GAS  /tmp/ccPoKGdA.s 			page 38


 1506              		.loc 1 617 0
 1507 0040 0F22     		movs	r2, #15
 1508 0042 0192     		str	r2, [sp, #4]
 618:Src/setup.c   ****   sConfig.Rank    = 1;
 1509              		.loc 1 618 0
 1510 0044 0293     		str	r3, [sp, #8]
 619:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc2, &sConfig);
 1511              		.loc 1 619 0
 1512 0046 01A9     		add	r1, sp, #4
 1513 0048 2046     		mov	r0, r4
 1514 004a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1515              	.LVL90:
 620:Src/setup.c   **** 
 621:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_13;  // pc3 right b
 1516              		.loc 1 621 0
 1517 004e 0D23     		movs	r3, #13
 1518 0050 0193     		str	r3, [sp, #4]
 622:Src/setup.c   ****   sConfig.Rank    = 2;
 1519              		.loc 1 622 0
 1520 0052 0225     		movs	r5, #2
 1521 0054 0295     		str	r5, [sp, #8]
 623:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc2, &sConfig);
 1522              		.loc 1 623 0
 1523 0056 01A9     		add	r1, sp, #4
 1524 0058 2046     		mov	r0, r4
 1525 005a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1526              	.LVL91:
 624:Src/setup.c   **** 
 625:Src/setup.c   ****   sConfig.SamplingTime = ADC_SAMPLETIME_13CYCLES_5;
 1527              		.loc 1 625 0
 1528 005e 0395     		str	r5, [sp, #12]
 626:Src/setup.c   **** 
 627:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_10;  // pc0 right cur
 1529              		.loc 1 627 0
 1530 0060 0A23     		movs	r3, #10
 1531 0062 0193     		str	r3, [sp, #4]
 628:Src/setup.c   ****   sConfig.Rank    = 3;
 1532              		.loc 1 628 0
 1533 0064 0327     		movs	r7, #3
 1534 0066 0297     		str	r7, [sp, #8]
 629:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc2, &sConfig);
 1535              		.loc 1 629 0
 1536 0068 01A9     		add	r1, sp, #4
 1537 006a 2046     		mov	r0, r4
 1538 006c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1539              	.LVL92:
 630:Src/setup.c   **** 
 631:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_2;  // pa2 uart-l-tx
 1540              		.loc 1 631 0
 1541 0070 0195     		str	r5, [sp, #4]
 632:Src/setup.c   ****   sConfig.Rank    = 4;
 1542              		.loc 1 632 0
 1543 0072 0423     		movs	r3, #4
 1544 0074 0293     		str	r3, [sp, #8]
 633:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc2, &sConfig);
 1545              		.loc 1 633 0
 1546 0076 0DEB0301 		add	r1, sp, r3
ARM GAS  /tmp/ccPoKGdA.s 			page 39


 1547 007a 2046     		mov	r0, r4
 1548 007c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1549              	.LVL93:
 634:Src/setup.c   **** 
 635:Src/setup.c   ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
 1550              		.loc 1 635 0
 1551 0080 0723     		movs	r3, #7
 1552 0082 0393     		str	r3, [sp, #12]
 636:Src/setup.c   **** 
 637:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_3;  // pa3 uart-l-rx
 1553              		.loc 1 637 0
 1554 0084 0197     		str	r7, [sp, #4]
 638:Src/setup.c   ****   sConfig.Rank    = 5;
 1555              		.loc 1 638 0
 1556 0086 0296     		str	r6, [sp, #8]
 639:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc2, &sConfig);
 1557              		.loc 1 639 0
 1558 0088 01A9     		add	r1, sp, #4
 1559 008a 2046     		mov	r0, r4
 1560 008c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1561              	.LVL94:
 640:Src/setup.c   **** 
 641:Src/setup.c   ****   hadc2.Instance->CR2 |= ADC_CR2_DMA;
 1562              		.loc 1 641 0
 1563 0090 2368     		ldr	r3, [r4]
 1564 0092 9A68     		ldr	r2, [r3, #8]
 1565 0094 42F48072 		orr	r2, r2, #256
 1566 0098 9A60     		str	r2, [r3, #8]
 642:Src/setup.c   ****   __HAL_ADC_ENABLE(&hadc2);
 1567              		.loc 1 642 0
 1568 009a 9A68     		ldr	r2, [r3, #8]
 1569 009c 42F00102 		orr	r2, r2, #1
 1570 00a0 9A60     		str	r2, [r3, #8]
 643:Src/setup.c   **** }
 1571              		.loc 1 643 0
 1572 00a2 05B0     		add	sp, sp, #20
 1573              	.LCFI20:
 1574              		.cfi_def_cfa_offset 20
 1575              		@ sp needed
 1576 00a4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1577              	.L28:
 1578 00a6 00BF     		.align	2
 1579              	.L27:
 1580 00a8 00100240 		.word	1073876992
 1581 00ac 00000000 		.word	hadc2
 1582 00b0 00280140 		.word	1073817600
 1583              		.cfi_endproc
 1584              	.LFE72:
 1586              		.comm	hdma_i2c2_tx,68,4
 1587              		.comm	hdma_i2c2_rx,68,4
 1588              		.comm	adc_buffer,20,4
 1589              		.comm	hdma_usart2_tx,68,4
 1590              		.comm	hdma_usart2_rx,68,4
 1591              		.comm	huart2,64,4
 1592              		.comm	hi2c2,84,4
 1593              		.comm	hadc2,48,4
 1594              		.comm	hadc1,48,4
ARM GAS  /tmp/ccPoKGdA.s 			page 40


 1595              		.comm	htim_left,64,4
 1596              		.comm	htim_right,64,4
 1597              		.text
 1598              	.Letext0:
 1599              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1600              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1601              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 1602              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1603              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 1604              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1605              		.file 8 "/usr/arm-none-eabi/include/sys/lock.h"
 1606              		.file 9 "/usr/arm-none-eabi/include/sys/_types.h"
 1607              		.file 10 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 1608              		.file 11 "/usr/arm-none-eabi/include/sys/reent.h"
 1609              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1610              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1611              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1612              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1613              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc_ex.h"
 1614              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1615              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1616              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1617              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1618              		.file 21 "Inc/defines.h"
 1619              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/ccPoKGdA.s 			page 41


DEFINED SYMBOLS
                            *ABS*:0000000000000000 setup.c
     /tmp/ccPoKGdA.s:16     .text.UART_Control_Init:0000000000000000 $t
     /tmp/ccPoKGdA.s:23     .text.UART_Control_Init:0000000000000000 UART_Control_Init
     /tmp/ccPoKGdA.s:215    .text.UART_Control_Init:0000000000000100 $d
                            *COM*:0000000000000040 huart2
                            *COM*:0000000000000044 hdma_usart2_rx
                            *COM*:0000000000000044 hdma_usart2_tx
     /tmp/ccPoKGdA.s:226    .text.UART_Init:0000000000000000 $t
     /tmp/ccPoKGdA.s:233    .text.UART_Init:0000000000000000 UART_Init
     /tmp/ccPoKGdA.s:338    .text.UART_Init:0000000000000084 $d
     /tmp/ccPoKGdA.s:347    .text.I2C_Init:0000000000000000 $t
     /tmp/ccPoKGdA.s:354    .text.I2C_Init:0000000000000000 I2C_Init
     /tmp/ccPoKGdA.s:569    .text.I2C_Init:0000000000000130 $d
                            *COM*:0000000000000054 hi2c2
                            *COM*:0000000000000044 hdma_i2c2_rx
                            *COM*:0000000000000044 hdma_i2c2_tx
     /tmp/ccPoKGdA.s:582    .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccPoKGdA.s:589    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccPoKGdA.s:907    .text.MX_GPIO_Init:00000000000001f4 $d
     /tmp/ccPoKGdA.s:915    .text.MX_TIM_Init:0000000000000000 $t
     /tmp/ccPoKGdA.s:922    .text.MX_TIM_Init:0000000000000000 MX_TIM_Init
     /tmp/ccPoKGdA.s:1234   .text.MX_TIM_Init:00000000000001dc $d
                            *COM*:0000000000000040 htim_right
                            *COM*:0000000000000040 htim_left
     /tmp/ccPoKGdA.s:1243   .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccPoKGdA.s:1250   .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccPoKGdA.s:1433   .text.MX_ADC1_Init:0000000000000110 $d
                            *COM*:0000000000000030 hadc1
                            *COM*:0000000000000014 adc_buffer
     /tmp/ccPoKGdA.s:1444   .text.MX_ADC2_Init:0000000000000000 $t
     /tmp/ccPoKGdA.s:1451   .text.MX_ADC2_Init:0000000000000000 MX_ADC2_Init
     /tmp/ccPoKGdA.s:1580   .text.MX_ADC2_Init:00000000000000a8 $d
                            *COM*:0000000000000030 hadc2

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Init
HAL_GPIO_Init
HAL_DMA_Init
HAL_I2C_Init
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_SlaveConfigSynchronization
HAL_TIM_PWM_Start
HAL_TIMEx_PWMN_Start
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
